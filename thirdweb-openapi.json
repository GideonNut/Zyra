{"info":{"contact":{"name":"thirdweb Support","url":"https://thirdweb.com/support"},"description":"thirdweb API provides a unified interface for Web3 development. Build scalable blockchain applications with easy-to-use endpoints for wallet management, transaction processing, signatures, and smart contract interactions. Powered by thirdweb's infrastructure.","license":{"name":"MIT","url":"https://opensource.org/licenses/MIT"},"title":"thirdweb API","version":"1.0.0"},"openapi":"3.1.0","security":[{"ClientAuth":[]},{"SecretKeyAuth":[]},{"BearerAuth":[]},{"EcosystemAuth":[],"EcosystemPartnerAuth":[]},{"AwsKmsArn":[],"AwsAccessKeyId":[],"AwsSecretAccessKey":[]}],"servers":[{"description":"thirdweb API server","url":"https://api.thirdweb.com"}],"components":{"securitySchemes":{"ClientAuth":{"description":"Client ID for frontend usage from allowlisted origins","in":"header","name":"x-client-id","type":"apiKey"},"SecretKeyAuth":{"description":"Secret key for backend usage (never expose publicly)","in":"header","name":"x-secret-key","type":"apiKey"},"BearerAuth":{"bearerFormat":"JWT","description":"JWT access token for frontend usage (obtained from wallet authentication)","scheme":"bearer","type":"http"},"EcosystemAuth":{"description":"Ecosystem ID for ecosystem wallet operations","in":"header","name":"x-ecosystem-id","type":"apiKey"},"EcosystemPartnerAuth":{"description":"Ecosystem Partner ID for partner-specific routing","in":"header","name":"x-ecosystem-partner-id","type":"apiKey"},"AwsKmsArn":{"description":"AWS KMS Key ARN for KMS-based authentication","in":"header","name":"x-aws-kms-arn","type":"apiKey"},"AwsAccessKeyId":{"description":"AWS Access Key ID for KMS authentication","in":"header","name":"x-aws-access-key-id","type":"apiKey"},"AwsSecretAccessKey":{"description":"AWS Secret Access Key for KMS authentication","in":"header","name":"x-aws-secret-access-key","type":"apiKey"}},"schemas":{},"parameters":{}},"paths":{"/v1/auth/initiate":{"post":{"tags":["Authentication"],"operationId":"initiateAuthentication","summary":"Initiate Auth","description":"Start any authentication flow in one unified endpoint. This endpoint supports all authentication methods including SMS, email, OAuth, passkey, and SIWE (Sign-In with Ethereum).\n\n**Supported Methods:**\n- **SMS** - Send verification code to phone number\n- **Email** - Send verification code to email address  \n- **OAuth** - Generate redirect link (Google, Apple, Facebook, Discord, GitHub, X, Coinbase, Farcaster, Telegram, LINE, Twitch, Steam)\n- **Passkey** - Generate WebAuthn challenge for biometric authentication\n- **SIWE** - Generate Sign-In with Ethereum payload\n\n**Flow:**\n1. Choose your authentication method\n2. Provide method-specific parameters\n3. Receive challenge data to complete authentication\n4. Use the `/complete` endpoint to finish the process\n\nNOTE: for custom authentication (JWT, auth-payload) and for guest authentication, you can skip this step and use the `/complete` endpoint directly.\n\n**Authentication:** Requires `x-client-id` header for frontend usage or `x-secret-key` for backend usage.","requestBody":{"content":{"application/json":{"schema":{"oneOf":[{"type":"object","properties":{"method":{"type":"string","enum":["sms"],"description":"Authentication method: SMS"},"phone":{"type":"string","description":"Phone number in E.164 format (e.g., +1234567890)"}},"required":["method","phone"],"title":"SMS Authentication"},{"type":"object","properties":{"method":{"type":"string","enum":["email"],"description":"Authentication method: Email"},"email":{"type":"string","format":"email","description":"Email address for verification code"}},"required":["method","email"],"title":"Email Authentication"},{"type":"object","properties":{"method":{"type":"string","enum":["oauth"],"description":"Authentication method: OAuth"},"provider":{"type":"string","enum":["google","apple","facebook","discord","farcaster","telegram","line","x","coinbase","github","twitch","steam"],"description":"Social login provider"},"redirectUrl":{"type":"string","format":"uri","description":"Custom redirect URL after OAuth completion"}},"required":["method","provider"],"title":"OAuth Authentication"},{"type":"object","properties":{"method":{"type":"string","enum":["passkey"],"description":"Authentication method: Passkey"},"type":{"type":"string","enum":["sign-up","sign-in"],"description":"Whether to create a new passkey or use existing one"},"username":{"type":"string","description":"Username for passkey (optional, for identification)"}},"required":["method","type"],"title":"Passkey Authentication"},{"type":"object","properties":{"method":{"type":"string","enum":["siwe"],"description":"Authentication method: Sign-In with Ethereum"},"address":{"type":"string","description":"Ethereum wallet address for SIWE"},"chainId":{"type":"integer","minimum":0,"exclusiveMinimum":true,"description":"Chain ID for SIWE (defaults to 1)"}},"required":["method","address"],"title":"SIWE Authentication"}],"description":"Request to initiate authentication flow. Choose one of the supported authentication methods: sms, email, oauth, passkey, or siwe. The required fields depend on the authentication method selected.","title":"Authentication Initiate Request","examples":[{"method":"sms","phone":"+1234567890"},{"method":"email","email":"user@example.com"},{"method":"oauth","provider":"google"},{"method":"passkey","type":"sign-in"},{"method":"siwe","address":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6"}]}}}},"responses":{"200":{"description":"Authentication initiated successfully. Use the returned challenge data to complete authentication.","content":{"application/json":{"schema":{"oneOf":[{"type":"object","properties":{"method":{"type":"string","enum":["sms"],"description":"Authentication method: SMS"},"success":{"type":"boolean","description":"Whether the SMS code was sent successfully"}},"required":["method","success"],"title":"SMS Response"},{"type":"object","properties":{"method":{"type":"string","enum":["email"],"description":"Authentication method: Email"},"success":{"type":"boolean","description":"Whether the email code was sent successfully"}},"required":["method","success"],"title":"Email Response"},{"type":"object","properties":{"method":{"type":"string","enum":["oauth"],"description":"Authentication method: OAuth"},"redirectUrl":{"type":"string","format":"uri","description":"URL to redirect user for OAuth authentication"}},"required":["method","redirectUrl"],"title":"OAuth Response"},{"type":"object","properties":{"method":{"type":"string","enum":["passkey"],"description":"Authentication method: Passkey"},"serverVerificationId":{"type":"string","description":"Server verification ID for passkey"},"challenge":{"type":"string","description":"Base64-encoded WebAuthn challenge"},"type":{"type":"string","description":"Challenge type (sign-up or sign-in)"}},"required":["method","serverVerificationId","challenge","type"],"title":"Passkey Response"},{"type":"object","properties":{"method":{"type":"string","enum":["siwe"],"description":"Authentication method: Sign-In with Ethereum"},"payload":{"type":"string","description":"SIWE message string to be signed"}},"required":["method","payload"],"title":"SIWE Response"}],"description":"Response from authentication initiation. Contains method-specific data needed to complete authentication.","title":"Authentication Initiate Response","examples":[{"method":"sms","success":true},{"method":"email","success":true},{"method":"oauth","redirectUrl":"https://wallets.google.com/oauth/authorize?..."},{"method":"passkey","serverVerificationId":"svid_abc123","challenge":"Y2hhbGxlbmdlX2RhdGE=","type":"sign-in"},{"method":"siwe","payload":"example.com wants you to sign in with your Ethereum wallet..."}]}}}},"400":{"description":"Invalid request - Check your method and parameters"},"429":{"description":"Rate limit exceeded - Please wait before trying again"}}}},"/v1/auth/complete":{"post":{"tags":["Authentication"],"operationId":"completeAuthentication","summary":"Complete Auth","description":"Complete the authentication flow and receive your wallet credentials. After initiating authentication, use this endpoint to submit the required verification data.\n\n**Completion Methods:**\n- **SMS/Email** - Submit the verification code you received\n- **Passkey** - Provide the WebAuthn signature response\n- **SIWE** - Submit your signed Ethereum message\n- **Guest** - Create an ephemeral guest wallet\n- **Custom (JWT, auth-payload)** - Send your JWT token or custom payload\n\n**Response:**\n- `isNewUser` - Whether this is a new wallet creation\n- `token` - JWT token for authenticated API requests\n- `type` - The authentication method used\n- `walletAddress` - Your new or existing wallet address\n\n**Authentication:** Requires `x-client-id` header for frontend usage or `x-secret-key` for backend usage.","requestBody":{"content":{"application/json":{"schema":{"oneOf":[{"type":"object","properties":{"method":{"type":"string","enum":["sms"],"description":"Authentication method: SMS"},"phone":{"type":"string","description":"Phone number that received the code"},"code":{"type":"string","description":"Verification code received via SMS"}},"required":["method","phone","code"],"title":"SMS Completion"},{"type":"object","properties":{"method":{"type":"string","enum":["email"],"description":"Authentication method: Email"},"email":{"type":"string","description":"Email address that received the code"},"code":{"type":"string","description":"Verification code received via email"}},"required":["method","email","code"],"title":"Email Completion"},{"type":"object","properties":{"method":{"type":"string","enum":["passkey"],"description":"Authentication method: Passkey"},"type":{"type":"string","enum":["sign-up","sign-in"],"description":"Passkey operation type"},"authenticatorData":{"type":"string","description":"Base64-encoded authenticator data"},"credentialId":{"type":"string","description":"Base64-encoded credential ID"},"serverVerificationId":{"type":"string","description":"Server verification ID from initiate response"},"clientData":{"type":"string","description":"Base64-encoded client data JSON"},"signature":{"type":"string","description":"Base64-encoded signature (for sign-in)"},"origin":{"type":"string","description":"Origin of the request"},"rpId":{"type":"string","description":"Relying party identifier"},"username":{"type":"string","description":"Username for the passkey"},"credential":{"type":"object","properties":{"publicKey":{"type":"string","description":"Public key for the credential"},"algorithm":{"anyOf":[{"type":"string","enum":["RS256"]},{"type":"string","enum":["ES256"]}],"description":"Algorithm used for the credential"}},"required":["publicKey","algorithm"],"description":"Credential data for passkey registration"}},"required":["method","type","authenticatorData","credentialId","serverVerificationId","clientData"],"title":"Passkey Completion"},{"type":"object","properties":{"method":{"type":"string","enum":["siwe"],"description":"Authentication method: Sign-In with Ethereum"},"signature":{"type":"string","description":"Hex-encoded signed SIWE message"},"payload":{"type":"string","description":"The original SIWE payload that was signed"}},"required":["method","signature","payload"],"title":"SIWE Completion"},{"type":"object","properties":{"method":{"type":"string","enum":["custom"],"description":"Authentication method: Custom"},"type":{"type":"string","enum":["jwt","auth-payload"],"description":"Custom authentication type"},"jwt":{"nullable":true,"description":"JWT token for OIDC authentication"},"payload":{"nullable":true,"description":"Custom authentication payload"}},"required":["method","type"],"title":"Custom Completion"},{"type":"object","properties":{"method":{"type":"string","enum":["guest"],"description":"Authentication method: Guest"},"sessionId":{"type":"string","description":"Optional guest session ID - if not provided, a random one will be generated with no persistence guarantees."}},"required":["method"],"title":"Guest Completion"}],"description":"Request to complete authentication flow. Choose the same method used in initiate: sms, email, oauth, passkey, siwe, guest, or custom. The required fields depend on the authentication method.","title":"Authentication Complete Request","examples":[{"method":"sms","phone":"+1234567890","code":"123456"},{"method":"email","email":"user@example.com","code":"789012"},{"method":"passkey","type":"sign-in","serverVerificationId":"svid_abc123","authenticatorData":"base64_authenticator_data","credentialId":"base64_credential_id","clientData":"base64_client_data","signature":"base64_signature"},{"method":"siwe","payload":"example.com wants you to sign in with your Ethereum wallet...","signature":"0x1234567890abcdef..."},{"method":"custom","type":"jwt","jwt":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."},{"method":"guest"}]}}}},"responses":{"200":{"description":"Authentication completed successfully. You now have wallet access.","content":{"application/json":{"schema":{"type":"object","properties":{"isNewUser":{"type":"boolean","description":"Whether this is a newly created user/wallet"},"token":{"type":"string","description":"JWT authentication token for API access"},"type":{"type":"string","description":"Type of authentication completed"},"walletAddress":{"type":"string","description":"The wallet address"}},"required":["isNewUser","token","type","walletAddress"],"description":"Successful authentication response. Returns wallet address plus authentication tokens.","examples":[{"isNewUser":true,"token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...","type":"email","walletAddress":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6"}]}}}},"400":{"description":"Invalid credentials or request - Check your challenge ID and verification data"},"429":{"description":"Rate limit exceeded - Please wait before trying again"}}}},"/v1/wallets/me":{"get":{"tags":["Wallets"],"operationId":"getMyWallet","summary":"Get My Wallet","description":"Retrieve the authenticated user's wallet information including wallet addresses and linked authentication wallets. This endpoint provides comprehensive user data for the currently authenticated session.\n\n**Returns:**\n- Primary wallet address\n- Smart wallet address (if available)\n- Wallet creation timestamp\n- Public key in hexadecimal format (if available)\n- All linked authentication profiles (email, phone, OAuth providers)\n\n**Authentication:** Requires `Authorization: Bearer <jwt>` header with a valid user authentication token.","responses":{"200":{"description":"Wallet retrieved successfully. Returns comprehensive user information including wallet addresses, public key, and linked wallets.","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"object","properties":{"address":{"type":"string","description":"The EOA (Externally Owned Wallet) address of the wallet. This is the traditional wallet address."},"createdAt":{"type":"string","description":"The date and time the wallet was created"},"profiles":{"type":"array","items":{"anyOf":[{"type":"object","properties":{"email":{"type":"string"},"emailVerified":{"type":"boolean"},"familyName":{"type":"string"},"givenName":{"type":"string"},"hd":{"type":"string"},"id":{"type":"string"},"locale":{"type":"string"},"name":{"type":"string"},"picture":{"type":"string"},"type":{"type":"string","enum":["google"]}},"required":["email","emailVerified","hd","id","locale","picture","type"],"description":"Google OAuth authentication provider details","title":"GoogleProvider"},{"type":"object","properties":{"email":{"type":"string"},"firstName":{"type":"string"},"id":{"type":"string"},"lastName":{"type":"string"},"name":{"type":"string"},"picture":{"type":"string"},"type":{"type":"string","enum":["facebook"]}},"required":["id","type"],"description":"Facebook OAuth authentication provider details","title":"FacebookProvider"},{"type":"object","properties":{"email":{"type":"string"},"emailVerified":{"type":"boolean"},"id":{"type":"string"},"isPrivateEmail":{"type":"boolean"},"type":{"type":"string","enum":["apple"]}},"required":["emailVerified","id","isPrivateEmail","type"],"description":"Apple OAuth authentication provider details","title":"AppleProvider"},{"type":"object","properties":{"avatar":{"type":"string","nullable":true},"id":{"type":"string"},"name":{"type":"string","nullable":true},"type":{"type":"string","enum":["github"]},"username":{"type":"string"}},"required":["id","type","username"],"description":"GitHub OAuth authentication provider details","title":"GitHubProvider"},{"type":"object","properties":{"avatar":{"type":"string"},"email":{"type":"string","format":"email"},"emailVerified":{"type":"boolean"},"id":{"type":"string"},"type":{"type":"string","enum":["discord"]},"username":{"type":"string"}},"required":["avatar","emailVerified","id","type","username"],"description":"Discord OAuth authentication provider details","title":"DiscordProvider"},{"type":"object","properties":{"avatar":{"type":"string"},"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["coinbase"]}},"required":["id","name","type"],"description":"Coinbase OAuth authentication provider details","title":"CoinbaseProvider"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["x"]},"username":{"type":"string"},"profileImageUrl":{"type":"string"}},"required":["id","name","type","username"],"description":"X (Twitter) OAuth authentication provider details","title":"XProvider"},{"type":"object","properties":{"avatar":{"type":"string"},"id":{"type":"string"},"metadata":{"type":"object","properties":{"avatar":{"type":"object","properties":{"large":{"type":"string"},"medium":{"type":"string"},"small":{"type":"string"}}},"personaname":{"type":"string"},"profileurl":{"type":"string"},"realname":{"type":"string"}},"required":["avatar"]},"type":{"type":"string","enum":["steam"]},"username":{"type":"string"}},"required":["id","metadata","type"],"description":"Steam OAuth authentication provider details","title":"SteamProvider"},{"type":"object","properties":{"firstName":{"type":"string"},"id":{"type":"string"},"lastName":{"type":"string"},"picture":{"type":"string"},"type":{"type":"string","enum":["telegram"]},"username":{"type":"string"}},"required":["id","type"],"description":"Telegram OAuth authentication provider details","title":"TelegramProvider"},{"type":"object","properties":{"avatar":{"type":"string"},"description":{"type":"string"},"email":{"type":"string"},"id":{"type":"string"},"type":{"type":"string","enum":["twitch"]},"username":{"type":"string"}},"required":["id","type","username"],"description":"Twitch OAuth authentication provider details","title":"TwitchProvider"},{"type":"object","properties":{"avatar":{"type":"string"},"id":{"type":"string"},"type":{"type":"string","enum":["line"]},"username":{"type":"string"}},"required":["id","type"],"description":"LINE OAuth authentication provider details","title":"LineProvider"},{"type":"object","properties":{"fid":{"type":"string"},"id":{"type":"string"},"type":{"type":"string","enum":["farcaster"]},"walletAddress":{"type":"string"}},"required":["fid","id","type"],"description":"Farcaster authentication provider details","title":"FarcasterProvider"},{"type":"object","properties":{"algorithm":{"type":"string"},"credentialId":{"type":"string"},"publicKey":{"type":"string"},"type":{"type":"string","enum":["passkey"]}},"required":["algorithm","credentialId","publicKey","type"],"description":"Passkey authentication provider details","title":"PasskeyProvider"},{"type":"object","properties":{"email":{"type":"string","format":"email"},"id":{"type":"string"},"type":{"type":"string","enum":["email"]}},"required":["email","id","type"],"description":"Email authentication provider details","title":"EmailProvider"},{"type":"object","properties":{"id":{"type":"string"},"pregeneratedIdentifier":{"type":"string"},"type":{"type":"string","enum":["pre_generation"]}},"required":["id","pregeneratedIdentifier","type"],"description":"Pre-generated wallet authentication provider details","title":"PreGenerationProvider"},{"type":"object","properties":{"id":{"type":"string"},"phone":{"type":"string"},"type":{"type":"string","enum":["phone"]}},"required":["id","phone","type"],"description":"Phone authentication provider details","title":"PhoneProvider"},{"type":"object","properties":{"id":{"type":"string"},"type":{"type":"string","enum":["siwe"]},"walletAddress":{"type":"string"}},"required":["id","type","walletAddress"],"description":"Sign-In with Ethereum (SIWE) authentication provider details","title":"SiweProvider"},{"type":"object","properties":{"id":{"type":"string"},"type":{"type":"string","enum":["guest"]}},"required":["id","type"],"description":"Guest authentication provider details","title":"GuestProvider"},{"type":"object","properties":{"id":{"type":"string"},"type":{"type":"string","enum":["backend"]}},"required":["id","type"],"description":"Backend authentication provider details (deprecated, use server instead)","title":"BackendProvider"},{"type":"object","properties":{"identifier":{"type":"string"},"type":{"type":"string","enum":["server"]}},"required":["identifier","type"],"description":"Server authentication provider details","title":"ServerProvider"},{"type":"object","properties":{"authProviderId":{"type":"string"},"email":{"type":"string"},"id":{"type":"string"},"phone":{"type":"string"},"type":{"type":"string","enum":["custom_jwt"]},"walletAddress":{"type":"string"}},"required":["id","type"],"description":"Custom JWT authentication provider details","title":"CustomJwtProvider"},{"type":"object","properties":{"authProviderId":{"type":"string"},"email":{"type":"string"},"id":{"type":"string"},"phone":{"type":"string"},"type":{"type":"string","enum":["custom_auth_endpoint"]},"walletAddress":{"type":"string"}},"required":["id","type"],"description":"Custom auth endpoint authentication provider details","title":"CustomAuthEndpointProvider"}],"description":"Authentication provider details with type-based discrimination","title":"AuthenticationProviderDetail"},"description":"The profiles linked to the wallet, can be email, phone, google etc, or backend for developer created wallets"},"smartWalletAddress":{"type":"string","description":"The smart wallet address with EIP-4337 support. This address enables gasless transactions and advanced wallet features."},"publicKey":{"type":"string","description":"The wallet's public key in hexadecimal format. Useful for peer-to-peer encryption and cryptographic operations."}},"required":["address","profiles"]}},"required":["result"]}}}},"401":{"description":"Authentication required. The request must include a valid `Authorization: Bearer <jwt>` header."},"404":{"description":"Wallet not found. The authenticated user does not exist in the system."},"500":{"description":"Internal server error. This may occur due to service unavailability or unexpected server errors."}}}},"/v1/wallets/user":{"get":{"description":"Get all user wallet details with filtering and pagination for your project.\n\n**Authentication**: This endpoint requires backend authentication using the `x-secret-key` header. The secret key should never be exposed publicly.","examples":[{"description":"Get first 10 user wallet details","request":{"query":{"limit":10,"page":1}},"response":{"result":{"pagination":{"hasMore":true,"limit":10,"page":1},"wallets":[{"address":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6","createdAt":"2024-11-05T00:55:25.142Z","profiles":[{"email":"richard@piedpiper.com","emailVerified":true,"familyName":"Hendricks","givenName":"Richard","hd":"piedpiper.com","id":"107302390467834615186","locale":"en","name":"Richard Hendricks","picture":"https://lh3.googleusercontent.com/a/test","type":"google"}],"smartWalletAddress":"0x1234567890123456789012345678901234567890"}]}}}],"operationId":"listUserWallets","summary":"List User Wallets","tags":["Wallets"],"parameters":[{"schema":{"type":"number","minimum":1,"maximum":100,"default":50},"required":false,"name":"limit","in":"query"},{"schema":{"type":"number","minimum":1,"default":1},"required":false,"name":"page","in":"query"},{"schema":{"type":"string"},"required":false,"name":"email","in":"query"},{"schema":{"type":"string"},"required":false,"name":"phone","in":"query"},{"schema":{"type":"string"},"required":false,"name":"address","in":"query"},{"schema":{"type":"string"},"required":false,"name":"externalWalletAddress","in":"query"},{"schema":{"type":"string"},"required":false,"name":"id","in":"query"}],"responses":{"200":{"description":"Returns a list of user wallet addresses, smart wallet addresses, and auth details.","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"object","properties":{"pagination":{"type":"object","properties":{"hasMore":{"type":"boolean","description":"Whether there are more items available"},"limit":{"type":"number","nullable":true,"default":20,"description":"Number of items per page"},"page":{"type":"number","nullable":true,"default":1,"description":"Current page number"},"totalCount":{"type":"number","nullable":true,"description":"Total number of items available"}},"description":"Pagination information"},"wallets":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string","description":"The EOA (Externally Owned Wallet) address of the wallet. This is the traditional wallet address."},"createdAt":{"type":"string","description":"The date and time the wallet was created"},"profiles":{"type":"array","items":{"anyOf":[{"type":"object","properties":{"email":{"type":"string"},"emailVerified":{"type":"boolean"},"familyName":{"type":"string"},"givenName":{"type":"string"},"hd":{"type":"string"},"id":{"type":"string"},"locale":{"type":"string"},"name":{"type":"string"},"picture":{"type":"string"},"type":{"type":"string","enum":["google"]}},"required":["email","emailVerified","hd","id","locale","picture","type"],"description":"Google OAuth authentication provider details","title":"GoogleProvider"},{"type":"object","properties":{"email":{"type":"string"},"firstName":{"type":"string"},"id":{"type":"string"},"lastName":{"type":"string"},"name":{"type":"string"},"picture":{"type":"string"},"type":{"type":"string","enum":["facebook"]}},"required":["id","type"],"description":"Facebook OAuth authentication provider details","title":"FacebookProvider"},{"type":"object","properties":{"email":{"type":"string"},"emailVerified":{"type":"boolean"},"id":{"type":"string"},"isPrivateEmail":{"type":"boolean"},"type":{"type":"string","enum":["apple"]}},"required":["emailVerified","id","isPrivateEmail","type"],"description":"Apple OAuth authentication provider details","title":"AppleProvider"},{"type":"object","properties":{"avatar":{"type":"string","nullable":true},"id":{"type":"string"},"name":{"type":"string","nullable":true},"type":{"type":"string","enum":["github"]},"username":{"type":"string"}},"required":["id","type","username"],"description":"GitHub OAuth authentication provider details","title":"GitHubProvider"},{"type":"object","properties":{"avatar":{"type":"string"},"email":{"type":"string","format":"email"},"emailVerified":{"type":"boolean"},"id":{"type":"string"},"type":{"type":"string","enum":["discord"]},"username":{"type":"string"}},"required":["avatar","emailVerified","id","type","username"],"description":"Discord OAuth authentication provider details","title":"DiscordProvider"},{"type":"object","properties":{"avatar":{"type":"string"},"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["coinbase"]}},"required":["id","name","type"],"description":"Coinbase OAuth authentication provider details","title":"CoinbaseProvider"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["x"]},"username":{"type":"string"},"profileImageUrl":{"type":"string"}},"required":["id","name","type","username"],"description":"X (Twitter) OAuth authentication provider details","title":"XProvider"},{"type":"object","properties":{"avatar":{"type":"string"},"id":{"type":"string"},"metadata":{"type":"object","properties":{"avatar":{"type":"object","properties":{"large":{"type":"string"},"medium":{"type":"string"},"small":{"type":"string"}}},"personaname":{"type":"string"},"profileurl":{"type":"string"},"realname":{"type":"string"}},"required":["avatar"]},"type":{"type":"string","enum":["steam"]},"username":{"type":"string"}},"required":["id","metadata","type"],"description":"Steam OAuth authentication provider details","title":"SteamProvider"},{"type":"object","properties":{"firstName":{"type":"string"},"id":{"type":"string"},"lastName":{"type":"string"},"picture":{"type":"string"},"type":{"type":"string","enum":["telegram"]},"username":{"type":"string"}},"required":["id","type"],"description":"Telegram OAuth authentication provider details","title":"TelegramProvider"},{"type":"object","properties":{"avatar":{"type":"string"},"description":{"type":"string"},"email":{"type":"string"},"id":{"type":"string"},"type":{"type":"string","enum":["twitch"]},"username":{"type":"string"}},"required":["id","type","username"],"description":"Twitch OAuth authentication provider details","title":"TwitchProvider"},{"type":"object","properties":{"avatar":{"type":"string"},"id":{"type":"string"},"type":{"type":"string","enum":["line"]},"username":{"type":"string"}},"required":["id","type"],"description":"LINE OAuth authentication provider details","title":"LineProvider"},{"type":"object","properties":{"fid":{"type":"string"},"id":{"type":"string"},"type":{"type":"string","enum":["farcaster"]},"walletAddress":{"type":"string"}},"required":["fid","id","type"],"description":"Farcaster authentication provider details","title":"FarcasterProvider"},{"type":"object","properties":{"algorithm":{"type":"string"},"credentialId":{"type":"string"},"publicKey":{"type":"string"},"type":{"type":"string","enum":["passkey"]}},"required":["algorithm","credentialId","publicKey","type"],"description":"Passkey authentication provider details","title":"PasskeyProvider"},{"type":"object","properties":{"email":{"type":"string","format":"email"},"id":{"type":"string"},"type":{"type":"string","enum":["email"]}},"required":["email","id","type"],"description":"Email authentication provider details","title":"EmailProvider"},{"type":"object","properties":{"id":{"type":"string"},"pregeneratedIdentifier":{"type":"string"},"type":{"type":"string","enum":["pre_generation"]}},"required":["id","pregeneratedIdentifier","type"],"description":"Pre-generated wallet authentication provider details","title":"PreGenerationProvider"},{"type":"object","properties":{"id":{"type":"string"},"phone":{"type":"string"},"type":{"type":"string","enum":["phone"]}},"required":["id","phone","type"],"description":"Phone authentication provider details","title":"PhoneProvider"},{"type":"object","properties":{"id":{"type":"string"},"type":{"type":"string","enum":["siwe"]},"walletAddress":{"type":"string"}},"required":["id","type","walletAddress"],"description":"Sign-In with Ethereum (SIWE) authentication provider details","title":"SiweProvider"},{"type":"object","properties":{"id":{"type":"string"},"type":{"type":"string","enum":["guest"]}},"required":["id","type"],"description":"Guest authentication provider details","title":"GuestProvider"},{"type":"object","properties":{"id":{"type":"string"},"type":{"type":"string","enum":["backend"]}},"required":["id","type"],"description":"Backend authentication provider details (deprecated, use server instead)","title":"BackendProvider"},{"type":"object","properties":{"identifier":{"type":"string"},"type":{"type":"string","enum":["server"]}},"required":["identifier","type"],"description":"Server authentication provider details","title":"ServerProvider"},{"type":"object","properties":{"authProviderId":{"type":"string"},"email":{"type":"string"},"id":{"type":"string"},"phone":{"type":"string"},"type":{"type":"string","enum":["custom_jwt"]},"walletAddress":{"type":"string"}},"required":["id","type"],"description":"Custom JWT authentication provider details","title":"CustomJwtProvider"},{"type":"object","properties":{"authProviderId":{"type":"string"},"email":{"type":"string"},"id":{"type":"string"},"phone":{"type":"string"},"type":{"type":"string","enum":["custom_auth_endpoint"]},"walletAddress":{"type":"string"}},"required":["id","type"],"description":"Custom auth endpoint authentication provider details","title":"CustomAuthEndpointProvider"}],"description":"Authentication provider details with type-based discrimination","title":"AuthenticationProviderDetail"},"description":"The profiles linked to the wallet, can be email, phone, google etc, or backend for developer created wallets"},"smartWalletAddress":{"type":"string","description":"The smart wallet address with EIP-4337 support. This address enables gasless transactions and advanced wallet features."},"publicKey":{"type":"string","description":"The wallet's public key in hexadecimal format. Useful for peer-to-peer encryption and cryptographic operations."}},"required":["address","profiles"]},"description":"Array of user wallets"}},"required":["pagination","wallets"]}},"required":["result"]}}}},"401":{"description":"Authentication required. The request must include a valid `x-secret-key` header for backend authentication."},"500":{"description":"Internal server error. This may occur due to service unavailability or unexpected server errors."}}},"post":{"description":"Create a user wallet with a wallet based on their authentication strategy. This endpoint creates a wallet in advance that can be claimed later when the user authenticates.\n\n**Authentication**: This endpoint requires backend authentication using the `x-secret-key` header. The secret key should never be exposed publicly.","examples":[{"description":"Create user wallet for email authentication","request":{"body":{"type":"email","email":"richard@piedpiper.com"}},"response":{"result":{"address":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6","createdAt":"2024-11-05T00:55:25.142Z","profiles":[{"email":"richard@piedpiper.com","type":"email"}],"smartWalletAddress":"0x1234567890123456789012345678901234567890"}}},{"description":"Create user wallet for SIWE authentication","request":{"body":{"type":"siwe","walletAddress":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6"}},"response":{"result":{"address":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6","createdAt":"2024-11-05T00:55:25.142Z","profiles":[{"address":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6","type":"siwe"}],"smartWalletAddress":"0x1234567890123456789012345678901234567890"}}}],"operationId":"createUserWallet","summary":"Create User Wallet","tags":["Wallets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","enum":["google","apple","facebook","discord","email","phone","custom_auth_endpoint","custom_jwt","siwe"]},"walletAddress":{"type":"string"},"email":{"type":"string"},"phone":{"type":"string"},"userId":{"type":"string"}},"required":["type"],"description":"Request body for pre-generating a wallet","examples":[{"type":"email","email":"test@test.com"}]}}}},"responses":{"200":{"description":"Successfully created a user wallet with wallet.","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"object","properties":{"address":{"type":"string","description":"The EOA (Externally Owned Wallet) address of the wallet. This is the traditional wallet address."},"createdAt":{"type":"string","description":"The date and time the wallet was created"},"profiles":{"type":"array","items":{"anyOf":[{"type":"object","properties":{"email":{"type":"string"},"emailVerified":{"type":"boolean"},"familyName":{"type":"string"},"givenName":{"type":"string"},"hd":{"type":"string"},"id":{"type":"string"},"locale":{"type":"string"},"name":{"type":"string"},"picture":{"type":"string"},"type":{"type":"string","enum":["google"]}},"required":["email","emailVerified","hd","id","locale","picture","type"],"description":"Google OAuth authentication provider details","title":"GoogleProvider"},{"type":"object","properties":{"email":{"type":"string"},"firstName":{"type":"string"},"id":{"type":"string"},"lastName":{"type":"string"},"name":{"type":"string"},"picture":{"type":"string"},"type":{"type":"string","enum":["facebook"]}},"required":["id","type"],"description":"Facebook OAuth authentication provider details","title":"FacebookProvider"},{"type":"object","properties":{"email":{"type":"string"},"emailVerified":{"type":"boolean"},"id":{"type":"string"},"isPrivateEmail":{"type":"boolean"},"type":{"type":"string","enum":["apple"]}},"required":["emailVerified","id","isPrivateEmail","type"],"description":"Apple OAuth authentication provider details","title":"AppleProvider"},{"type":"object","properties":{"avatar":{"type":"string","nullable":true},"id":{"type":"string"},"name":{"type":"string","nullable":true},"type":{"type":"string","enum":["github"]},"username":{"type":"string"}},"required":["id","type","username"],"description":"GitHub OAuth authentication provider details","title":"GitHubProvider"},{"type":"object","properties":{"avatar":{"type":"string"},"email":{"type":"string","format":"email"},"emailVerified":{"type":"boolean"},"id":{"type":"string"},"type":{"type":"string","enum":["discord"]},"username":{"type":"string"}},"required":["avatar","emailVerified","id","type","username"],"description":"Discord OAuth authentication provider details","title":"DiscordProvider"},{"type":"object","properties":{"avatar":{"type":"string"},"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["coinbase"]}},"required":["id","name","type"],"description":"Coinbase OAuth authentication provider details","title":"CoinbaseProvider"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["x"]},"username":{"type":"string"},"profileImageUrl":{"type":"string"}},"required":["id","name","type","username"],"description":"X (Twitter) OAuth authentication provider details","title":"XProvider"},{"type":"object","properties":{"avatar":{"type":"string"},"id":{"type":"string"},"metadata":{"type":"object","properties":{"avatar":{"type":"object","properties":{"large":{"type":"string"},"medium":{"type":"string"},"small":{"type":"string"}}},"personaname":{"type":"string"},"profileurl":{"type":"string"},"realname":{"type":"string"}},"required":["avatar"]},"type":{"type":"string","enum":["steam"]},"username":{"type":"string"}},"required":["id","metadata","type"],"description":"Steam OAuth authentication provider details","title":"SteamProvider"},{"type":"object","properties":{"firstName":{"type":"string"},"id":{"type":"string"},"lastName":{"type":"string"},"picture":{"type":"string"},"type":{"type":"string","enum":["telegram"]},"username":{"type":"string"}},"required":["id","type"],"description":"Telegram OAuth authentication provider details","title":"TelegramProvider"},{"type":"object","properties":{"avatar":{"type":"string"},"description":{"type":"string"},"email":{"type":"string"},"id":{"type":"string"},"type":{"type":"string","enum":["twitch"]},"username":{"type":"string"}},"required":["id","type","username"],"description":"Twitch OAuth authentication provider details","title":"TwitchProvider"},{"type":"object","properties":{"avatar":{"type":"string"},"id":{"type":"string"},"type":{"type":"string","enum":["line"]},"username":{"type":"string"}},"required":["id","type"],"description":"LINE OAuth authentication provider details","title":"LineProvider"},{"type":"object","properties":{"fid":{"type":"string"},"id":{"type":"string"},"type":{"type":"string","enum":["farcaster"]},"walletAddress":{"type":"string"}},"required":["fid","id","type"],"description":"Farcaster authentication provider details","title":"FarcasterProvider"},{"type":"object","properties":{"algorithm":{"type":"string"},"credentialId":{"type":"string"},"publicKey":{"type":"string"},"type":{"type":"string","enum":["passkey"]}},"required":["algorithm","credentialId","publicKey","type"],"description":"Passkey authentication provider details","title":"PasskeyProvider"},{"type":"object","properties":{"email":{"type":"string","format":"email"},"id":{"type":"string"},"type":{"type":"string","enum":["email"]}},"required":["email","id","type"],"description":"Email authentication provider details","title":"EmailProvider"},{"type":"object","properties":{"id":{"type":"string"},"pregeneratedIdentifier":{"type":"string"},"type":{"type":"string","enum":["pre_generation"]}},"required":["id","pregeneratedIdentifier","type"],"description":"Pre-generated wallet authentication provider details","title":"PreGenerationProvider"},{"type":"object","properties":{"id":{"type":"string"},"phone":{"type":"string"},"type":{"type":"string","enum":["phone"]}},"required":["id","phone","type"],"description":"Phone authentication provider details","title":"PhoneProvider"},{"type":"object","properties":{"id":{"type":"string"},"type":{"type":"string","enum":["siwe"]},"walletAddress":{"type":"string"}},"required":["id","type","walletAddress"],"description":"Sign-In with Ethereum (SIWE) authentication provider details","title":"SiweProvider"},{"type":"object","properties":{"id":{"type":"string"},"type":{"type":"string","enum":["guest"]}},"required":["id","type"],"description":"Guest authentication provider details","title":"GuestProvider"},{"type":"object","properties":{"id":{"type":"string"},"type":{"type":"string","enum":["backend"]}},"required":["id","type"],"description":"Backend authentication provider details (deprecated, use server instead)","title":"BackendProvider"},{"type":"object","properties":{"identifier":{"type":"string"},"type":{"type":"string","enum":["server"]}},"required":["identifier","type"],"description":"Server authentication provider details","title":"ServerProvider"},{"type":"object","properties":{"authProviderId":{"type":"string"},"email":{"type":"string"},"id":{"type":"string"},"phone":{"type":"string"},"type":{"type":"string","enum":["custom_jwt"]},"walletAddress":{"type":"string"}},"required":["id","type"],"description":"Custom JWT authentication provider details","title":"CustomJwtProvider"},{"type":"object","properties":{"authProviderId":{"type":"string"},"email":{"type":"string"},"id":{"type":"string"},"phone":{"type":"string"},"type":{"type":"string","enum":["custom_auth_endpoint"]},"walletAddress":{"type":"string"}},"required":["id","type"],"description":"Custom auth endpoint authentication provider details","title":"CustomAuthEndpointProvider"}],"description":"Authentication provider details with type-based discrimination","title":"AuthenticationProviderDetail"},"description":"The profiles linked to the wallet, can be email, phone, google etc, or backend for developer created wallets"},"smartWalletAddress":{"type":"string","description":"The smart wallet address with EIP-4337 support. This address enables gasless transactions and advanced wallet features."},"publicKey":{"type":"string","description":"The wallet's public key in hexadecimal format. Useful for peer-to-peer encryption and cryptographic operations."}},"required":["address","profiles"]}},"required":["result"]}}}},"400":{"description":"Invalid request. This may occur due to missing required fields based on the authentication strategy, invalid strategy, or malformed request data."},"401":{"description":"Authentication required. The request must include a valid `x-secret-key` header for backend authentication."},"500":{"description":"Internal server error. This may occur due to service unavailability or unexpected server errors."}}}},"/v1/wallets/server":{"get":{"description":"Get all server wallet details with pagination for your project.\n\n**Authentication**: This endpoint requires backend authentication using the `x-secret-key` header. The secret key should never be exposed publicly.","examples":[{"description":"Get first 10 server wallet details","request":{"query":{"limit":10,"page":1}},"response":{"result":{"pagination":{"limit":10,"page":1,"totalCount":25},"wallets":[{"address":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6","createdAt":"2024-11-05T00:55:25.142Z","profiles":[{"identifier":"treasury-wallet-123","type":"server"}],"smartWalletAddress":"0x1234567890123456789012345678901234567890"}]}}}],"operationId":"listServerWallets","summary":"List Server Wallets","tags":["Wallets"],"parameters":[{"schema":{"type":"number","minimum":1,"maximum":100,"default":50},"required":false,"name":"limit","in":"query"},{"schema":{"type":"number","minimum":1,"default":1},"required":false,"name":"page","in":"query"}],"responses":{"200":{"description":"Returns a list of server wallet addresses, smart wallet addresses, and auth details.","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"object","properties":{"pagination":{"type":"object","properties":{"hasMore":{"type":"boolean","description":"Whether there are more items available"},"limit":{"type":"number","nullable":true,"default":20,"description":"Number of items per page"},"page":{"type":"number","nullable":true,"default":1,"description":"Current page number"},"totalCount":{"type":"number","nullable":true,"description":"Total number of items available"}},"description":"Pagination information"},"wallets":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string","description":"The EOA (Externally Owned Wallet) address of the wallet. This is the traditional wallet address."},"createdAt":{"type":"string","description":"The date and time the wallet was created"},"profiles":{"type":"array","items":{"anyOf":[{"type":"object","properties":{"email":{"type":"string"},"emailVerified":{"type":"boolean"},"familyName":{"type":"string"},"givenName":{"type":"string"},"hd":{"type":"string"},"id":{"type":"string"},"locale":{"type":"string"},"name":{"type":"string"},"picture":{"type":"string"},"type":{"type":"string","enum":["google"]}},"required":["email","emailVerified","hd","id","locale","picture","type"],"description":"Google OAuth authentication provider details","title":"GoogleProvider"},{"type":"object","properties":{"email":{"type":"string"},"firstName":{"type":"string"},"id":{"type":"string"},"lastName":{"type":"string"},"name":{"type":"string"},"picture":{"type":"string"},"type":{"type":"string","enum":["facebook"]}},"required":["id","type"],"description":"Facebook OAuth authentication provider details","title":"FacebookProvider"},{"type":"object","properties":{"email":{"type":"string"},"emailVerified":{"type":"boolean"},"id":{"type":"string"},"isPrivateEmail":{"type":"boolean"},"type":{"type":"string","enum":["apple"]}},"required":["emailVerified","id","isPrivateEmail","type"],"description":"Apple OAuth authentication provider details","title":"AppleProvider"},{"type":"object","properties":{"avatar":{"type":"string","nullable":true},"id":{"type":"string"},"name":{"type":"string","nullable":true},"type":{"type":"string","enum":["github"]},"username":{"type":"string"}},"required":["id","type","username"],"description":"GitHub OAuth authentication provider details","title":"GitHubProvider"},{"type":"object","properties":{"avatar":{"type":"string"},"email":{"type":"string","format":"email"},"emailVerified":{"type":"boolean"},"id":{"type":"string"},"type":{"type":"string","enum":["discord"]},"username":{"type":"string"}},"required":["avatar","emailVerified","id","type","username"],"description":"Discord OAuth authentication provider details","title":"DiscordProvider"},{"type":"object","properties":{"avatar":{"type":"string"},"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["coinbase"]}},"required":["id","name","type"],"description":"Coinbase OAuth authentication provider details","title":"CoinbaseProvider"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["x"]},"username":{"type":"string"},"profileImageUrl":{"type":"string"}},"required":["id","name","type","username"],"description":"X (Twitter) OAuth authentication provider details","title":"XProvider"},{"type":"object","properties":{"avatar":{"type":"string"},"id":{"type":"string"},"metadata":{"type":"object","properties":{"avatar":{"type":"object","properties":{"large":{"type":"string"},"medium":{"type":"string"},"small":{"type":"string"}}},"personaname":{"type":"string"},"profileurl":{"type":"string"},"realname":{"type":"string"}},"required":["avatar"]},"type":{"type":"string","enum":["steam"]},"username":{"type":"string"}},"required":["id","metadata","type"],"description":"Steam OAuth authentication provider details","title":"SteamProvider"},{"type":"object","properties":{"firstName":{"type":"string"},"id":{"type":"string"},"lastName":{"type":"string"},"picture":{"type":"string"},"type":{"type":"string","enum":["telegram"]},"username":{"type":"string"}},"required":["id","type"],"description":"Telegram OAuth authentication provider details","title":"TelegramProvider"},{"type":"object","properties":{"avatar":{"type":"string"},"description":{"type":"string"},"email":{"type":"string"},"id":{"type":"string"},"type":{"type":"string","enum":["twitch"]},"username":{"type":"string"}},"required":["id","type","username"],"description":"Twitch OAuth authentication provider details","title":"TwitchProvider"},{"type":"object","properties":{"avatar":{"type":"string"},"id":{"type":"string"},"type":{"type":"string","enum":["line"]},"username":{"type":"string"}},"required":["id","type"],"description":"LINE OAuth authentication provider details","title":"LineProvider"},{"type":"object","properties":{"fid":{"type":"string"},"id":{"type":"string"},"type":{"type":"string","enum":["farcaster"]},"walletAddress":{"type":"string"}},"required":["fid","id","type"],"description":"Farcaster authentication provider details","title":"FarcasterProvider"},{"type":"object","properties":{"algorithm":{"type":"string"},"credentialId":{"type":"string"},"publicKey":{"type":"string"},"type":{"type":"string","enum":["passkey"]}},"required":["algorithm","credentialId","publicKey","type"],"description":"Passkey authentication provider details","title":"PasskeyProvider"},{"type":"object","properties":{"email":{"type":"string","format":"email"},"id":{"type":"string"},"type":{"type":"string","enum":["email"]}},"required":["email","id","type"],"description":"Email authentication provider details","title":"EmailProvider"},{"type":"object","properties":{"id":{"type":"string"},"pregeneratedIdentifier":{"type":"string"},"type":{"type":"string","enum":["pre_generation"]}},"required":["id","pregeneratedIdentifier","type"],"description":"Pre-generated wallet authentication provider details","title":"PreGenerationProvider"},{"type":"object","properties":{"id":{"type":"string"},"phone":{"type":"string"},"type":{"type":"string","enum":["phone"]}},"required":["id","phone","type"],"description":"Phone authentication provider details","title":"PhoneProvider"},{"type":"object","properties":{"id":{"type":"string"},"type":{"type":"string","enum":["siwe"]},"walletAddress":{"type":"string"}},"required":["id","type","walletAddress"],"description":"Sign-In with Ethereum (SIWE) authentication provider details","title":"SiweProvider"},{"type":"object","properties":{"id":{"type":"string"},"type":{"type":"string","enum":["guest"]}},"required":["id","type"],"description":"Guest authentication provider details","title":"GuestProvider"},{"type":"object","properties":{"id":{"type":"string"},"type":{"type":"string","enum":["backend"]}},"required":["id","type"],"description":"Backend authentication provider details (deprecated, use server instead)","title":"BackendProvider"},{"type":"object","properties":{"identifier":{"type":"string"},"type":{"type":"string","enum":["server"]}},"required":["identifier","type"],"description":"Server authentication provider details","title":"ServerProvider"},{"type":"object","properties":{"authProviderId":{"type":"string"},"email":{"type":"string"},"id":{"type":"string"},"phone":{"type":"string"},"type":{"type":"string","enum":["custom_jwt"]},"walletAddress":{"type":"string"}},"required":["id","type"],"description":"Custom JWT authentication provider details","title":"CustomJwtProvider"},{"type":"object","properties":{"authProviderId":{"type":"string"},"email":{"type":"string"},"id":{"type":"string"},"phone":{"type":"string"},"type":{"type":"string","enum":["custom_auth_endpoint"]},"walletAddress":{"type":"string"}},"required":["id","type"],"description":"Custom auth endpoint authentication provider details","title":"CustomAuthEndpointProvider"}],"description":"Authentication provider details with type-based discrimination","title":"AuthenticationProviderDetail"},"description":"The profiles linked to the wallet, can be email, phone, google etc, or backend for developer created wallets"},"smartWalletAddress":{"type":"string","description":"The smart wallet address with EIP-4337 support. This address enables gasless transactions and advanced wallet features."},"publicKey":{"type":"string","description":"The wallet's public key in hexadecimal format. Useful for peer-to-peer encryption and cryptographic operations."}},"required":["address","profiles"]},"description":"Array of server wallets"}},"required":["pagination","wallets"]}},"required":["result"]}}}},"401":{"description":"Authentication required. The request must include a valid `x-secret-key` header for backend authentication."},"500":{"description":"Internal server error. This may occur due to service unavailability or unexpected server errors."}}},"post":{"description":"Creates a server wallet from a unique identifier. If the wallet already exists, it will return the existing wallet.\n\n**Authentication**: This endpoint requires backend authentication using the `x-secret-key` header. The secret key should never be exposed publicly.","examples":[{"description":"Create a new server wallet using a unique identifier (backend usage)","request":{"body":{"identifier":"treasury-wallet-123"},"headers":{"x-secret-key":"your-secret-key"}},"response":{"result":{"address":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6","smartWalletAddress":"0x1234567890123456789012345678901234567890"}},"summary":"Create Server Wallet"}],"operationId":"createServerWallet","summary":"Create Server Wallet","tags":["Wallets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"identifier":{"type":"string","minLength":1,"description":"Unique identifier for wallet creation or retrieval. Can be user ID, email, or any unique string. The same identifier will always return the same wallet."}},"required":["identifier"],"description":"Request body for creating a wallet","examples":[{"identifier":"treasury-wallet-123"}]}}}},"responses":{"200":{"description":"Server wallet created or connected successfully. Returns wallet addresses for subsequent operations.","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"object","properties":{"address":{"type":"string","description":"The EOA (Externally Owned Wallet) address of the wallet. This is the traditional wallet address."},"createdAt":{"type":"string","description":"The date and time the wallet was created"},"profiles":{"type":"array","items":{"anyOf":[{"type":"object","properties":{"email":{"type":"string"},"emailVerified":{"type":"boolean"},"familyName":{"type":"string"},"givenName":{"type":"string"},"hd":{"type":"string"},"id":{"type":"string"},"locale":{"type":"string"},"name":{"type":"string"},"picture":{"type":"string"},"type":{"type":"string","enum":["google"]}},"required":["email","emailVerified","hd","id","locale","picture","type"],"description":"Google OAuth authentication provider details","title":"GoogleProvider"},{"type":"object","properties":{"email":{"type":"string"},"firstName":{"type":"string"},"id":{"type":"string"},"lastName":{"type":"string"},"name":{"type":"string"},"picture":{"type":"string"},"type":{"type":"string","enum":["facebook"]}},"required":["id","type"],"description":"Facebook OAuth authentication provider details","title":"FacebookProvider"},{"type":"object","properties":{"email":{"type":"string"},"emailVerified":{"type":"boolean"},"id":{"type":"string"},"isPrivateEmail":{"type":"boolean"},"type":{"type":"string","enum":["apple"]}},"required":["emailVerified","id","isPrivateEmail","type"],"description":"Apple OAuth authentication provider details","title":"AppleProvider"},{"type":"object","properties":{"avatar":{"type":"string","nullable":true},"id":{"type":"string"},"name":{"type":"string","nullable":true},"type":{"type":"string","enum":["github"]},"username":{"type":"string"}},"required":["id","type","username"],"description":"GitHub OAuth authentication provider details","title":"GitHubProvider"},{"type":"object","properties":{"avatar":{"type":"string"},"email":{"type":"string","format":"email"},"emailVerified":{"type":"boolean"},"id":{"type":"string"},"type":{"type":"string","enum":["discord"]},"username":{"type":"string"}},"required":["avatar","emailVerified","id","type","username"],"description":"Discord OAuth authentication provider details","title":"DiscordProvider"},{"type":"object","properties":{"avatar":{"type":"string"},"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["coinbase"]}},"required":["id","name","type"],"description":"Coinbase OAuth authentication provider details","title":"CoinbaseProvider"},{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string","enum":["x"]},"username":{"type":"string"},"profileImageUrl":{"type":"string"}},"required":["id","name","type","username"],"description":"X (Twitter) OAuth authentication provider details","title":"XProvider"},{"type":"object","properties":{"avatar":{"type":"string"},"id":{"type":"string"},"metadata":{"type":"object","properties":{"avatar":{"type":"object","properties":{"large":{"type":"string"},"medium":{"type":"string"},"small":{"type":"string"}}},"personaname":{"type":"string"},"profileurl":{"type":"string"},"realname":{"type":"string"}},"required":["avatar"]},"type":{"type":"string","enum":["steam"]},"username":{"type":"string"}},"required":["id","metadata","type"],"description":"Steam OAuth authentication provider details","title":"SteamProvider"},{"type":"object","properties":{"firstName":{"type":"string"},"id":{"type":"string"},"lastName":{"type":"string"},"picture":{"type":"string"},"type":{"type":"string","enum":["telegram"]},"username":{"type":"string"}},"required":["id","type"],"description":"Telegram OAuth authentication provider details","title":"TelegramProvider"},{"type":"object","properties":{"avatar":{"type":"string"},"description":{"type":"string"},"email":{"type":"string"},"id":{"type":"string"},"type":{"type":"string","enum":["twitch"]},"username":{"type":"string"}},"required":["id","type","username"],"description":"Twitch OAuth authentication provider details","title":"TwitchProvider"},{"type":"object","properties":{"avatar":{"type":"string"},"id":{"type":"string"},"type":{"type":"string","enum":["line"]},"username":{"type":"string"}},"required":["id","type"],"description":"LINE OAuth authentication provider details","title":"LineProvider"},{"type":"object","properties":{"fid":{"type":"string"},"id":{"type":"string"},"type":{"type":"string","enum":["farcaster"]},"walletAddress":{"type":"string"}},"required":["fid","id","type"],"description":"Farcaster authentication provider details","title":"FarcasterProvider"},{"type":"object","properties":{"algorithm":{"type":"string"},"credentialId":{"type":"string"},"publicKey":{"type":"string"},"type":{"type":"string","enum":["passkey"]}},"required":["algorithm","credentialId","publicKey","type"],"description":"Passkey authentication provider details","title":"PasskeyProvider"},{"type":"object","properties":{"email":{"type":"string","format":"email"},"id":{"type":"string"},"type":{"type":"string","enum":["email"]}},"required":["email","id","type"],"description":"Email authentication provider details","title":"EmailProvider"},{"type":"object","properties":{"id":{"type":"string"},"pregeneratedIdentifier":{"type":"string"},"type":{"type":"string","enum":["pre_generation"]}},"required":["id","pregeneratedIdentifier","type"],"description":"Pre-generated wallet authentication provider details","title":"PreGenerationProvider"},{"type":"object","properties":{"id":{"type":"string"},"phone":{"type":"string"},"type":{"type":"string","enum":["phone"]}},"required":["id","phone","type"],"description":"Phone authentication provider details","title":"PhoneProvider"},{"type":"object","properties":{"id":{"type":"string"},"type":{"type":"string","enum":["siwe"]},"walletAddress":{"type":"string"}},"required":["id","type","walletAddress"],"description":"Sign-In with Ethereum (SIWE) authentication provider details","title":"SiweProvider"},{"type":"object","properties":{"id":{"type":"string"},"type":{"type":"string","enum":["guest"]}},"required":["id","type"],"description":"Guest authentication provider details","title":"GuestProvider"},{"type":"object","properties":{"id":{"type":"string"},"type":{"type":"string","enum":["backend"]}},"required":["id","type"],"description":"Backend authentication provider details (deprecated, use server instead)","title":"BackendProvider"},{"type":"object","properties":{"identifier":{"type":"string"},"type":{"type":"string","enum":["server"]}},"required":["identifier","type"],"description":"Server authentication provider details","title":"ServerProvider"},{"type":"object","properties":{"authProviderId":{"type":"string"},"email":{"type":"string"},"id":{"type":"string"},"phone":{"type":"string"},"type":{"type":"string","enum":["custom_jwt"]},"walletAddress":{"type":"string"}},"required":["id","type"],"description":"Custom JWT authentication provider details","title":"CustomJwtProvider"},{"type":"object","properties":{"authProviderId":{"type":"string"},"email":{"type":"string"},"id":{"type":"string"},"phone":{"type":"string"},"type":{"type":"string","enum":["custom_auth_endpoint"]},"walletAddress":{"type":"string"}},"required":["id","type"],"description":"Custom auth endpoint authentication provider details","title":"CustomAuthEndpointProvider"}],"description":"Authentication provider details with type-based discrimination","title":"AuthenticationProviderDetail"},"description":"The profiles linked to the wallet, can be email, phone, google etc, or backend for developer created wallets"},"smartWalletAddress":{"type":"string","description":"The smart wallet address with EIP-4337 support. This address enables gasless transactions and advanced wallet features."},"publicKey":{"type":"string","description":"The wallet's public key in hexadecimal format. Useful for peer-to-peer encryption and cryptographic operations."}},"required":["address","profiles"]}},"required":["result"]}}}},"400":{"description":"Invalid request parameters. This occurs when the identifier format is invalid or required parameters are missing."},"401":{"description":"Authentication required. For backend usage, include `x-secret-key` header."},"500":{"description":"Internal server error. This may occur due to wallet service unavailability, smart wallet deployment issues, or unexpected server errors."}}}},"/v1/wallets/{address}/balance":{"get":{"description":"Get native or ERC20 token balance for a wallet address. Can retrieve live balances for any ERC20 token on a signle chain, or native token balances across multiple chains.\n\n**Authentication**: Pass `x-client-id` header for frontend usage from allowlisted origins or `x-secret-key` for backend usage.","examples":[{"description":"Get native token balance on Ethereum and Polygon","request":{"params":{"address":"0x23ab781749E2694222f7FD499Ed7861463Fb9a5d"},"query":{"chainId":[1,137]}},"response":{"result":[{"chainId":1,"decimals":18,"displayValue":"1.5","name":"Ether","symbol":"ETH","tokenAddress":"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee","value":"1500000000000000000"},{"chainId":137,"decimals":18,"displayValue":"2.3","name":"Matic Token","symbol":"MATIC","tokenAddress":"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee","value":"2300000000000000000"}]}},{"description":"Get USDC ERC-20 balance on Ethereum","request":{"params":{"address":"0x23ab781749E2694222f7FD499Ed7861463Fb9a5d"},"query":{"chainId":[1],"tokenAddress":"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"}},"response":{"result":[{"chainId":1,"decimals":6,"displayValue":"123.456789","name":"USD Coin","symbol":"USDC","tokenAddress":"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48","value":"123456789"}]}}],"operationId":"getWalletBalance","summary":"Get Balance","tags":["Wallets"],"parameters":[{"schema":{"type":"string","description":"A valid Ethereum address (0x-prefixed hex string) or ENS name (e.g., vitalik.eth)."},"required":true,"description":"A valid Ethereum address (0x-prefixed hex string) or ENS name (e.g., vitalik.eth).","name":"address","in":"path"},{"schema":{"type":"array","description":"Chain ID(s) to request balance data for. You can specify multiple chain IDs by repeating the parameter, up to a maximum of 50. Example: ?chainId=1&chainId=137","items":{"type":"integer"},"maxItems":50,"minItems":1},"required":true,"description":"Chain ID(s) to request balance data for. You can specify multiple chain IDs by repeating the parameter, up to a maximum of 50. Example: ?chainId=1&chainId=137","name":"chainId","in":"query"},{"schema":{"type":"string","description":"The token contract address. Omit for native token (ETH, MATIC, etc.)."},"required":false,"description":"The token contract address. Omit for native token (ETH, MATIC, etc.).","name":"tokenAddress","in":"query"}],"responses":{"200":{"description":"Wallet native balances retrieved successfully. Returns detailed native token balance information for each chain including token metadata and formatted values.","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"chainId":{"type":"number","description":"The blockchain network ID"},"decimals":{"type":"number","description":"Number of decimal places for the token"},"displayValue":{"type":"string","description":"Human-readable balance formatted with appropriate decimal places"},"name":{"type":"string","description":"The token name (e.g., 'Ether', 'USD Coin')"},"symbol":{"type":"string","description":"The token symbol (e.g., 'ETH', 'USDC')"},"tokenAddress":{"type":"string","description":"The token contract address. Returns zero address (0x0...0) for native tokens."},"value":{"type":"string","description":"Raw balance value as string in smallest unit (wei for ETH, etc.)"}},"required":["chainId","decimals","displayValue","name","symbol","tokenAddress","value"]}}},"required":["result"]}}}},"400":{"description":"Invalid request parameters. This occurs when the wallet address format is invalid, chainId array is empty or exceeds the maximum limit of 50, or chain IDs are invalid."},"401":{"description":"Authentication required. The request must include a valid `x-client-id` header for frontend usage or x-secret-key for backend usage."},"500":{"description":"Internal server error. This may occur due to blockchain connectivity issues, RPC service unavailability, or unexpected server errors."}}}},"/v1/wallets/{address}/transactions":{"get":{"description":"Retrieves transactions for a specific wallet address across one or more blockchain networks. This endpoint provides comprehensive transaction data including both incoming and outgoing transactions, with block information, gas details, transaction status, and function calls. Results can be filtered, paginated, and sorted to meet specific requirements.\n\n**Authentication**: Pass `x-client-id` header for frontend usage from allowlisted origins or `x-secret-key` for backend usage.","examples":[{"description":"Get recent transactions for a wallet on Ethereum mainnet","request":{"query":{"address":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6","chainId":[1],"limit":10,"sortOrder":"desc"}},"response":{"result":{"data":[{"blockHash":"0x3a1fba5abd9d41457944e91ed097e039b7b12d3d7ba324a3f422db2277a48e28","blockNumber":18500000,"blockTimestamp":1698000000,"chainId":"1","data":"0xa9059cbb000000000000000000000000742d35cc6634c0532925a3b8d43c67b8c8b3e9c60000000000000000000000000000000000000000000000000de0b6b3a7640000","effectiveGasPrice":"20000000000","fromAddress":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6","functionSelector":"0xa9059cbb","gas":50000,"gasPrice":"20000000000","gasUsed":21000,"hash":"0x218b632d932371478d1ae5a01620ebab1a2030f9dad6f8fba4a044ea6335a57e","nonce":42,"status":1,"toAddress":"0xA0b86a33E6411E3036C1C4c7E815D0a82e3F5fD6","transactionIndex":100,"value":"1000000000000000000"}],"meta":{"address":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6","chainIds":[1],"limitPerChain":10,"page":0,"totalItems":1500,"totalPages":150}}},"summary":"Wallet Transactions on Ethereum"},{"description":"Get transactions across multiple chains with decoding (always enabled)","request":{"query":{"address":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6","chainId":[1,137,56],"limit":5,"page":0}},"response":{"result":{"data":[{"blockHash":"0x3a1fba5abd9d41457944e91ed097e039b7b12d3d7ba324a3f422db2277a48e28","blockNumber":18500000,"blockTimestamp":1698000000,"chainId":"1","data":"0xa9059cbb000000000000000000000000742d35cc6634c0532925a3b8d43c67b8c8b3e9c60000000000000000000000000000000000000000000000000de0b6b3a7640000","decoded":{"inputs":{"amount":"1000000000000000000","to":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6"},"name":"transfer","signature":"transfer(address,uint256)"},"effectiveGasPrice":"20000000000","fromAddress":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6","functionSelector":"0xa9059cbb","gas":50000,"gasPrice":"20000000000","gasUsed":21000,"hash":"0x218b632d932371478d1ae5a01620ebab1a2030f9dad6f8fba4a044ea6335a57e","nonce":42,"status":1,"toAddress":"0xA0b86a33E6411E3036C1C4c7E815D0a82e3F5fD6","transactionIndex":100,"value":"1000000000000000000"}],"meta":{"address":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6","chainIds":[1,137,56],"limitPerChain":5,"page":0,"totalItems":750,"totalPages":150}}},"summary":"Multi-Chain Wallet Transactions with Decoding"}],"operationId":"getWalletTransactions","summary":"Get Transactions","tags":["Wallets"],"parameters":[{"schema":{"type":"string","description":"A valid Ethereum address (0x-prefixed hex string) or ENS name (e.g., vitalik.eth)."},"required":true,"description":"A valid Ethereum address (0x-prefixed hex string) or ENS name (e.g., vitalik.eth).","name":"address","in":"path"},{"schema":{"type":"integer","nullable":true,"minimum":0,"description":"Filter by block timestamp (Unix timestamp) greater than or equal to this value"},"required":false,"description":"Filter by block timestamp (Unix timestamp) greater than or equal to this value","name":"filterBlockTimestampGte","in":"query"},{"schema":{"type":"integer","nullable":true,"minimum":0,"description":"Filter by block timestamp (Unix timestamp) less than or equal to this value"},"required":false,"description":"Filter by block timestamp (Unix timestamp) less than or equal to this value","name":"filterBlockTimestampLte","in":"query"},{"schema":{"type":"integer","nullable":true,"minimum":0,"description":"Filter by block number greater than or equal to this value"},"required":false,"description":"Filter by block number greater than or equal to this value","name":"filterBlockNumberGte","in":"query"},{"schema":{"type":"integer","nullable":true,"minimum":0,"description":"Filter by block number less than or equal to this value"},"required":false,"description":"Filter by block number less than or equal to this value","name":"filterBlockNumberLte","in":"query"},{"schema":{"type":"string","description":"Filter by transaction value (in wei) greater than this value"},"required":false,"description":"Filter by transaction value (in wei) greater than this value","name":"filterValueGt","in":"query"},{"schema":{"type":"string","description":"Filter by function selector (4-byte method ID), e.g., '0xa9059cbb' for ERC-20 transfer"},"required":false,"description":"Filter by function selector (4-byte method ID), e.g., '0xa9059cbb' for ERC-20 transfer","name":"filterFunctionSelector","in":"query"},{"schema":{"type":"number","nullable":true,"default":1,"description":"Current page number"},"required":false,"description":"Current page number","name":"page","in":"query"},{"schema":{"type":"number","nullable":true,"default":20,"description":"Number of items per page"},"required":false,"description":"Number of items per page","name":"limit","in":"query"},{"schema":{"type":"string","enum":["asc","desc"],"default":"desc","description":"Sort order: 'asc' for ascending, 'desc' for descending"},"required":false,"description":"Sort order: 'asc' for ascending, 'desc' for descending","name":"sortOrder","in":"query"},{"schema":{"type":"array","description":"Chain ID(s) to request transaction data for. You can specify multiple chain IDs by repeating the parameter, up to a maximum of 50. Example: ?chainId=1&chainId=137","items":{"type":"integer"},"maxItems":50,"minItems":1},"required":true,"description":"Chain ID(s) to request transaction data for. You can specify multiple chain IDs by repeating the parameter, up to a maximum of 50. Example: ?chainId=1&chainId=137","name":"chainId","in":"query"}],"responses":{"200":{"description":"Wallet transactions retrieved successfully. Returns transaction data with metadata including pagination information and chain details. Includes decoded function calls when ABI is available.","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"object","properties":{"pagination":{"type":"object","properties":{"hasMore":{"type":"boolean","description":"Whether there are more items available"},"limit":{"type":"number","nullable":true,"default":20,"description":"Number of items per page"},"page":{"type":"number","nullable":true,"default":1,"description":"Current page number"},"totalCount":{"type":"number","nullable":true,"description":"Total number of items available"}}},"transactions":{"type":"array","items":{"type":"object","properties":{"blockHash":{"type":"string","description":"The hash of the block containing this transaction."},"blockNumber":{"type":"number","description":"The block number containing this transaction."},"blockTimestamp":{"type":"number","description":"The timestamp of the block (Unix timestamp)."},"chainId":{"type":"string","description":"The chain ID where the transaction occurred."},"contractAddress":{"type":"string","description":"Contract address created if this was a contract creation transaction."},"cumulativeGasUsed":{"type":"number","description":"Total gas used by all transactions in this block up to and including this one."},"data":{"type":"string","description":"The transaction input data."},"decoded":{"type":"object","properties":{"inputs":{"type":"object","additionalProperties":{"nullable":true},"description":"Object containing decoded function parameters."},"name":{"type":"string","description":"The function name."},"signature":{"type":"string","description":"The function signature."}},"required":["inputs","name","signature"],"description":"Decoded transaction data (included when ABI is available)."},"effectiveGasPrice":{"type":"string","description":"The effective gas price paid (in wei as string)."},"fromAddress":{"type":"string","description":"The address that initiated the transaction."},"functionSelector":{"type":"string","description":"The function selector (first 4 bytes of the transaction data)."},"gas":{"type":"number","description":"The gas limit for the transaction."},"gasPrice":{"type":"string","description":"The gas price used for the transaction (in wei as string)."},"gasUsed":{"type":"number","description":"The amount of gas used by the transaction."},"hash":{"type":"string","description":"The transaction hash."},"maxFeePerGas":{"type":"string","description":"Maximum fee per gas (EIP-1559)."},"maxPriorityFeePerGas":{"type":"string","description":"Maximum priority fee per gas (EIP-1559)."},"nonce":{"type":"number","description":"The transaction nonce."},"status":{"type":"number","description":"The transaction status (1 for success, 0 for failure)."},"toAddress":{"type":"string","description":"The address that received the transaction."},"transactionIndex":{"type":"number","description":"The index of the transaction within the block."},"transactionType":{"type":"number","description":"The transaction type (0=legacy, 1=EIP-2930, 2=EIP-1559)."},"value":{"type":"string","description":"The value transferred in the transaction (in wei as string)."}},"required":["blockHash","blockNumber","blockTimestamp","chainId","data","fromAddress","functionSelector","gas","gasPrice","hash","nonce","status","toAddress","transactionIndex","value"]},"description":"Array of wallet transactions."}},"required":["pagination","transactions"]}},"required":["result"]}}}},"400":{"description":"Invalid request parameters. This occurs when the wallet address format is invalid, chainId array is empty or exceeds the maximum limit of 50, or pagination parameters are out of range."},"401":{"description":"Authentication required. The request must include a valid `x-client-id` header for frontend usage or x-secret-key for backend usage."},"404":{"description":"Wallet not found or no transactions available for the specified wallet address on the given blockchain networks."},"500":{"description":"Internal server error. This may occur due to network connectivity issues, external service unavailability, or unexpected server errors."}}}},"/v1/wallets/{address}/tokens":{"get":{"description":"Retrieves token balances for a specific wallet address across one or more blockchain networks. This endpoint provides comprehensive token data including ERC-20 tokens with their balances, metadata, and price information. Results can be filtered by chain and paginated to meet specific requirements.\n\n**Authentication**: Pass `x-client-id` header for frontend usage from allowlisted origins or `x-secret-key` for backend usage.","examples":[{"description":"Get token balances for a wallet on Ethereum mainnet","request":{"params":{"address":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6"},"query":{"chainId":[1],"limit":10}},"response":{"result":{"pagination":{"limit":10,"page":1,"totalCount":25},"tokens":[{"balance":"1000000000000000000","chain_id":1,"decimals":18,"name":"Dai Stablecoin","price_data":{"market_cap_usd":5000000000,"percent_change_24h":0.1,"price_timestamp":"2024-01-15T10:30:00Z","price_usd":1.001,"volume_24h_usd":50000000},"symbol":"DAI","token_address":"0xA0b86a33E6411E3036C1C4c7E815D0a82e3F5fD6"}]}},"summary":"Wallet Tokens on Ethereum"},{"description":"Get token balances across multiple chains","request":{"params":{"address":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6"},"query":{"chainId":[1,137,56],"limit":5,"page":1}},"response":{"result":{"pagination":{"limit":5,"page":1,"totalCount":15},"tokens":[{"balance":"1000000000000000000","chain_id":1,"decimals":18,"name":"Dai Stablecoin","price_data":{"market_cap_usd":5000000000,"percent_change_24h":0.1,"price_timestamp":"2024-01-15T10:30:00Z","price_usd":1.001,"volume_24h_usd":50000000},"symbol":"DAI","token_address":"0xA0b86a33E6411E3036C1C4c7E815D0a82e3F5fD6"},{"balance":"500000000","chain_id":137,"decimals":6,"name":"USD Coin","price_data":{"market_cap_usd":25000000000,"percent_change_24h":-0.05,"price_timestamp":"2024-01-15T10:30:00Z","price_usd":0.999,"volume_24h_usd":100000000},"symbol":"USDC","token_address":"0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174"}]}},"summary":"Multi-Chain Wallet Tokens"}],"operationId":"getWalletTokens","summary":"Get Tokens","tags":["Wallets"],"parameters":[{"schema":{"type":"string","description":"A valid Ethereum address (0x-prefixed hex string) or ENS name (e.g., vitalik.eth)."},"required":true,"description":"A valid Ethereum address (0x-prefixed hex string) or ENS name (e.g., vitalik.eth).","name":"address","in":"path"},{"schema":{"type":"array","description":"Chain ID(s) to request token data for. You can specify multiple chain IDs by repeating the parameter, up to a maximum of 50. Example: ?chainId=1&chainId=137","items":{"type":"integer"},"maxItems":50,"minItems":1},"required":true,"description":"Chain ID(s) to request token data for. You can specify multiple chain IDs by repeating the parameter, up to a maximum of 50. Example: ?chainId=1&chainId=137","name":"chainId","in":"query"},{"schema":{"type":"array","description":"Token addresses to filter by. If provided, only tokens with these addresses will be returned.","items":{"type":"string"},"maxItems":50,"minItems":1},"required":false,"description":"Token addresses to filter by. If provided, only tokens with these addresses will be returned.","name":"tokenAddresses","in":"query"},{"schema":{"type":"integer","minimum":1,"maximum":500,"default":20,"description":"The number of tokens to return per chain (default: 20, max: 500)."},"required":false,"description":"The number of tokens to return per chain (default: 20, max: 500).","name":"limit","in":"query"},{"schema":{"type":"integer","minimum":1,"maximum":20,"default":1,"description":"The page number for pagination (default: 1, max: 20)."},"required":false,"description":"The page number for pagination (default: 1, max: 20).","name":"page","in":"query"}],"responses":{"200":{"description":"Wallet tokens retrieved successfully. Returns token data with metadata including pagination information and chain details. Includes token balances, metadata, and price information when available.","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"object","properties":{"pagination":{"type":"object","properties":{"hasMore":{"type":"boolean","description":"Whether there are more items available"},"limit":{"type":"number","nullable":true,"default":20,"description":"Number of items per page"},"page":{"type":"number","nullable":true,"default":1,"description":"Current page number"},"totalCount":{"type":"number","nullable":true,"description":"Total number of items available"}}},"tokens":{"type":"array","items":{"type":"object","properties":{"balance":{"type":"string","description":"The token balance as a string"},"chain_id":{"type":"number","description":"The chain ID of the token"},"decimals":{"type":"number","description":"The number of decimal places"},"name":{"type":"string","description":"The token name"},"price_data":{"type":"object","properties":{"circulating_supply":{"type":"number","description":"The circulating supply of the token"},"market_cap_usd":{"type":"number","description":"The market cap of the token in USD"},"percent_change_24h":{"type":"number","description":"The percentage change of the token in the last 24 hours"},"price_timestamp":{"type":"string","description":"The timestamp of the latest price update"},"price_usd":{"type":"number","description":"The price of the token in USD"},"total_supply":{"type":"number","description":"The total supply of the token"},"volume_24h_usd":{"type":"number","description":"The volume of the token in USD"}},"description":"Price data for the token"},"symbol":{"type":"string","description":"The token symbol"},"token_address":{"type":"string","description":"The contract address of the token"}},"required":["balance","chain_id","token_address"]},"description":"Array of wallet tokens."}},"required":["pagination","tokens"]}},"required":["result"]}}}},"400":{"description":"Invalid request parameters. This occurs when the wallet address format is invalid, chainId array is empty or exceeds the maximum limit of 50, or pagination parameters are out of range."},"401":{"description":"Authentication required. The request must include a valid `x-client-id` header for frontend usage or x-secret-key for backend usage."},"404":{"description":"Wallet not found or no tokens available for the specified wallet address on the given blockchain networks."},"500":{"description":"Internal server error. This may occur due to network connectivity issues, external service unavailability, or unexpected server errors."}}}},"/v1/wallets/{address}/nfts":{"get":{"description":"Retrieves NFTs for a specific wallet address across one or more blockchain networks. This endpoint provides comprehensive NFT data including metadata, attributes, and collection information. Results can be filtered by chain and paginated to meet specific requirements.\n\n**Authentication**: Pass `x-client-id` header for frontend usage from allowlisted origins or `x-secret-key` for backend usage.","examples":[{"description":"Get NFTs for a wallet on Ethereum mainnet","request":{"params":{"address":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6"},"query":{"chainId":[1],"limit":10}},"response":{"result":{"nfts":[{"attributes":[{"trait_type":"Background","value":"Blue"},{"trait_type":"Eyes","value":"Laser Eyes"}],"chain_id":1,"collection":{"description":"A collection of 10,000 unique Bored Ape NFTs","name":"Bored Ape Yacht Club"},"description":"A unique Bored Ape NFT","image":"https://ipfs.io/ipfs/QmYxT4LnK8sqLupjbS6eRvu1si7Ly2wFQAqFebxhWntcf6","name":"Bored Ape #1234","token_address":"0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D","token_id":"1234"}],"pagination":{"hasMore":false,"limit":10,"page":1}}},"summary":"Wallet NFTs on Ethereum"},{"description":"Get NFTs across multiple chains","request":{"params":{"address":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6"},"query":{"chainId":[1,137,56],"limit":5,"page":1}},"response":{"result":{"nfts":[{"chain_id":1,"description":"A unique Bored Ape NFT","image":"https://ipfs.io/ipfs/QmYxT4LnK8sqLupjbS6eRvu1si7Ly2wFQAqFebxhWntcf6","name":"Bored Ape #1234","token_address":"0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D","token_id":"1234"},{"chain_id":137,"description":"A creature from the OpenSea collection","image":"https://ipfs.io/ipfs/QmPbxeGcXhYQQNgsC6a36dDyYUcHgMLnGKnF8pVFmGsvqi","name":"OpenSea Creature #5678","token_address":"0x2953399124F0cBB46d2CbACD8A89cF0599974963","token_id":"5678"}],"pagination":{"hasMore":true,"limit":5,"page":0}}},"summary":"Multi-Chain Wallet NFTs"}],"operationId":"getWalletNFTs","summary":"Get NFTs","tags":["Wallets"],"parameters":[{"schema":{"type":"string","description":"A valid Ethereum address (0x-prefixed hex string) or ENS name (e.g., vitalik.eth)."},"required":true,"description":"A valid Ethereum address (0x-prefixed hex string) or ENS name (e.g., vitalik.eth).","name":"address","in":"path"},{"schema":{"type":"array","description":"Chain ID(s) to request NFT data for. You can specify multiple chain IDs by repeating the parameter, up to a maximum of 50. Example: ?chainId=1&chainId=137","items":{"type":"integer"},"maxItems":50,"minItems":1},"required":true,"description":"Chain ID(s) to request NFT data for. You can specify multiple chain IDs by repeating the parameter, up to a maximum of 50. Example: ?chainId=1&chainId=137","name":"chainId","in":"query"},{"schema":{"type":"array","description":"NFT contract addresses to filter by. If provided, only NFTs with these addresses will be returned.","items":{"type":"string"},"maxItems":50,"minItems":1},"required":false,"description":"NFT contract addresses to filter by. If provided, only NFTs with these addresses will be returned.","name":"contractAddresses","in":"query"},{"schema":{"type":"integer","minimum":1,"maximum":500,"default":20,"description":"The number of NFTs to return per chain (default: 20, max: 500)."},"required":false,"description":"The number of NFTs to return per chain (default: 20, max: 500).","name":"limit","in":"query"},{"schema":{"type":"integer","minimum":1,"maximum":20,"default":1,"description":"The page number for pagination (default: 1, max: 20)."},"required":false,"description":"The page number for pagination (default: 1, max: 20).","name":"page","in":"query"}],"responses":{"200":{"description":"Wallet NFTs retrieved successfully. Returns NFT data with metadata including pagination information and chain details. Includes NFT metadata, attributes, and collection information when available.","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"object","properties":{"nfts":{"type":"array","items":{"type":"object","properties":{"animation_url":{"type":"string","description":"The animation URL of the NFT"},"attributes":{"type":"array","items":{"type":"object","properties":{"display_type":{"type":"string","description":"The display type"},"trait_type":{"type":"string","description":"The trait type"},"value":{"anyOf":[{"type":"string"},{"type":"number"}],"description":"The trait value"}}},"description":"The attributes/traits of the NFT"},"chain_id":{"type":"number","description":"The chain ID of the NFT"},"collection":{"type":"object","properties":{"description":{"type":"string","description":"The collection description"},"external_url":{"type":"string","description":"The collection external URL"},"image":{"type":"string","description":"The collection image URL"},"name":{"type":"string","description":"The collection name"}},"description":"Collection information"},"description":{"type":"string","description":"The description of the NFT"},"external_url":{"type":"string","description":"The external URL of the NFT"},"image_url":{"type":"string","description":"The image URL of the NFT"},"metadata":{"type":"object","additionalProperties":{"nullable":true},"description":"Additional metadata for the NFT"},"name":{"type":"string","description":"The name of the NFT"},"token_address":{"type":"string","description":"The contract address of the NFT collection"},"token_id":{"type":"string","description":"The token ID of the NFT"}},"required":["chain_id","token_address","token_id"]},"description":"Array of wallet NFTs."},"pagination":{"type":"object","properties":{"hasMore":{"type":"boolean","description":"Whether there are more items available"},"limit":{"type":"number","nullable":true,"default":20,"description":"Number of items per page"},"page":{"type":"number","nullable":true,"default":1,"description":"Current page number"},"totalCount":{"type":"number","nullable":true,"description":"Total number of items available"}}}},"required":["nfts","pagination"]}},"required":["result"]}}}},"400":{"description":"Invalid request parameters. This occurs when the wallet address format is invalid, chainId array is empty or exceeds the maximum limit of 50, or pagination parameters are out of range."},"401":{"description":"Authentication required. The request must include a valid `x-client-id` header for frontend usage or x-secret-key for backend usage."},"404":{"description":"Wallet not found or no NFTs available for the specified wallet address on the given blockchain networks."},"500":{"description":"Internal server error. This may occur due to network connectivity issues, external service unavailability, or unexpected server errors."}}}},"/v1/wallets/sign-message":{"post":{"description":"Signs an arbitrary message using the specified wallet. This endpoint supports both text and hexadecimal message formats. The signing is performed using thirdweb Engine with smart wallet support for gasless transactions.\n\n**Authentication**: This endpoint requires project authentication and wallet authentication. For backend usage, use `x-secret-key` header. For frontend usage, use `x-client-id` + `Authorization: Bearer <jwt>` headers.","examples":[{"description":"Sign a plain text message for user authentication or verification (backend usage)","request":{"body":{"from":"0x1234567890123456789012345678901234567890","chainId":1,"message":"Hello, thirdweb!"},"headers":{"x-secret-key":"your-secret-key"}},"response":{"result":{"signature":"0x1234567890abcdef..."}},"summary":"Sign Text Message (Backend)"},{"description":"Sign a hexadecimal encoded message (frontend usage)","request":{"body":{"from":"0x1234567890123456789012345678901234567890","chainId":137,"message":"0x48656c6c6f2c207468697264776562"},"headers":{"Authorization":"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."}},"response":{"result":{"signature":"0xabcdef1234567890..."}},"summary":"Sign Hex Message (Frontend)"}],"operationId":"signMessage","summary":"Sign Message","tags":["Wallets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"from":{"type":"string","description":"The wallet address or ENS name that will sign the message."},"chainId":{"type":"integer","minimum":0,"exclusiveMinimum":true,"description":"The blockchain network identifier where the signing will occur. Common values include: 1 (Ethereum), 137 (Polygon), 56 (BSC)."},"message":{"type":"string","description":"The message to be signed. Can be plain text or hexadecimal format (starting with 0x). The format is automatically detected."}},"required":["from","chainId","message"],"description":"Request body for signing a message","examples":[{"from":"0x1234567890123456789012345678901234567890","chainId":1,"message":"Hello, world!"}]}}}},"responses":{"200":{"description":"Message signed successfully. Returns the cryptographic signature that can be used for verification.","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"object","properties":{"signature":{"type":"string","description":"The cryptographic signature in hexadecimal format. This can be used for verification and authentication purposes."}},"required":["signature"]}},"required":["result"]}}}},"400":{"description":"Invalid request parameters. This occurs when the wallet address format is invalid, chainId is not supported, or the message format is incorrect."},"401":{"description":"Authentication required. For backend usage, include `x-secret-key` header. For frontend usage, include `x-client-id` + `Authorization: Bearer <jwt>` headers."},"500":{"description":"Internal server error. This may occur due to wallet connectivity issues, signing service unavailability, or unexpected server errors."}}}},"/v1/wallets/sign-typed-data":{"post":{"description":"Signs structured data according to the EIP-712 standard using the specified wallet. This is commonly used for secure message signing in DeFi protocols, NFT marketplaces, and other dApps that require structured data verification. The typed data includes domain separation and type definitions for enhanced security.\n\n**Authentication**: This endpoint requires project authentication and wallet authentication. For backend usage, use `x-secret-key` header. For frontend usage, use `x-client-id` + `Authorization: Bearer <jwt>` headers.","examples":[{"description":"Sign a permit message for gasless ERC-20 token approvals (backend usage)","request":{"body":{"from":"0x1234567890123456789012345678901234567890","chainId":1,"domain":{"chainId":"1","name":"MyToken","verifyingContract":"0xA0b86a33E6411E3036C1C4c7E815D0a82e3F5fD6","version":"1"},"message":{"deadline":"1735689600","nonce":"0","owner":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6","spender":"0x1234567890123456789012345678901234567890","value":"1000000000000000000"},"primaryType":"Permit","types":{"Permit":[{"name":"owner","type":"address"},{"name":"spender","type":"address"},{"name":"value","type":"uint256"},{"name":"nonce","type":"uint256"},{"name":"deadline","type":"uint256"}]}},"headers":{"x-secret-key":"your-secret-key"}},"response":{"result":{"signature":"0x1234567890abcdef..."}},"summary":"Sign ERC-20 Permit (Backend)"}],"operationId":"signTypedData","summary":"Sign Typed Data","tags":["Wallets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"from":{"type":"string","description":"The wallet address or ENS name that will sign the typed data."},"chainId":{"type":"integer","minimum":0,"exclusiveMinimum":true,"description":"The blockchain network identifier for EIP-712 domain separation."},"domain":{"type":"object","properties":{"chainId":{"type":"string","description":"Chain ID as string for domain separation"},"name":{"type":"string","description":"The domain name (e.g., token name)"},"salt":{"type":"string","description":"Optional salt for additional entropy"},"verifyingContract":{"type":"string","description":"The contract address that will verify this signature"},"version":{"type":"string","description":"Domain version for signature compatibility"}},"description":"EIP-712 domain separator containing contract and chain information for signature verification."},"message":{"type":"object","additionalProperties":{"nullable":true},"description":"The structured data to be signed, matching the defined types schema."},"primaryType":{"type":"string","description":"The primary type name from the types object that defines the main structure being signed."},"types":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"The field name"},"type":{"type":"string","description":"The Solidity type (e.g., 'address', 'uint256')"}},"required":["name","type"]}},"description":"Type definitions for the structured data, following EIP-712 specifications."}},"required":["from","chainId","domain","message","primaryType","types"],"description":"Request body for signing typed data","examples":[{"from":"0x1234567890123456789012345678901234567890","chainId":1,"domain":{"name":"MyDomain","version":"1","chainId":"1","verifyingContract":"0x1234567890123456789012345678901234567890"},"message":{"name":"foo"},"primaryType":"MyType","types":{"MyType":[{"name":"name","type":"string"}]}}]}}}},"responses":{"200":{"description":"Typed data signed successfully. Returns the EIP-712 compliant signature that can be used for on-chain verification.","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"object","properties":{"signature":{"type":"string","description":"The cryptographic signature in hexadecimal format. This can be used for verification and authentication purposes."}},"required":["signature"]}},"required":["result"]}}}},"400":{"description":"Invalid request parameters. This occurs when the typed data structure is malformed, domain parameters are incorrect, or wallet address format is invalid."},"401":{"description":"Authentication required. The request must include valid `x-wallet-access-token` headers for accessing the wallet, as well as a x-client-id (frontend) or x-secret-key (backend) for project authentication."},"500":{"description":"Internal server error. This may occur due to wallet connectivity issues, signing service unavailability, or unexpected server errors."}}}},"/v1/wallets/send":{"post":{"description":"Send tokens to multiple recipients in a single transaction batch. Supports native tokens (ETH, MATIC, etc.), ERC20 tokens, ERC721 NFTs, and ERC1155 tokens. The token type is automatically determined based on the provided parameters and ERC165 interface detection:\n\n- **Native Token**: No `tokenAddress` provided\n- **ERC20**: `tokenAddress` provided, no `tokenId`\n- **ERC721/ERC1155**: `tokenAddress` and `tokenId` provided. Auto detects contract type:\n  - ERC721: quantity must be '1'\n  - ERC1155: any quantity allowed (including '1')\n\n**Authentication**: This endpoint requires project authentication and wallet authentication. For backend usage, use `x-secret-key` header. For frontend usage, use `x-client-id` + `Authorization: Bearer <jwt>` headers.","examples":[{"description":"Send native tokens (ETH) to multiple recipients","request":{"body":{"from":"0x1234567890123456789012345678901234567890","chainId":1,"recipients":[{"address":"0xabcdefabcdefabcdefabcdefabcdefabcdefabcd","quantity":"1000000000000000000"},{"address":"0x1111111111111111111111111111111111111111","quantity":"500000000000000000"}]},"headers":{"x-secret-key":"your-secret-key"}},"response":{"result":{"transactionIds":["0xabcdef1234567890...","0x1234567890abcdef..."]}},"summary":"Native Token Transfer"},{"description":"Send ERC20 tokens (USDC) to recipients","request":{"body":{"from":"0x1234567890123456789012345678901234567890","chainId":137,"recipients":[{"address":"0xabcdefabcdefabcdefabcdefabcdefabcdefabcd","quantity":"1000000000"}],"tokenAddress":"0x2791bca1f2de4661ed88a30c99a7a9449aa84174"},"headers":{"x-secret-key":"your-secret-key"}},"response":{"result":{"transactionIds":["0xabcdef1234567890..."]}},"summary":"ERC20 Token Transfer"},{"description":"Send ERC721 NFT to recipient","request":{"body":{"from":"0x1234567890123456789012345678901234567890","chainId":1,"recipients":[{"address":"0xabcdefabcdefabcdefabcdefabcdefabcdefabcd","quantity":"1"}],"tokenAddress":"0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d","tokenId":"123"},"headers":{"x-secret-key":"your-secret-key"}},"response":{"result":{"transactionIds":["0xabcdef1234567890..."]}},"summary":"ERC721 NFT Transfer"},{"description":"Send ERC1155 tokens to recipient (any quantity including '1')","request":{"body":{"from":"0x1234567890123456789012345678901234567890","chainId":137,"recipients":[{"address":"0xabcdefabcdefabcdefabcdefabcdefabcdefabcd","quantity":"1"}],"tokenAddress":"0x2953399124f0cbb46d2cbacd8a89cf0599974963","tokenId":"456"},"headers":{"x-secret-key":"your-secret-key"}},"response":{"result":{"transactionIds":["0xabcdef1234567890..."]}},"summary":"ERC1155 Token Transfer (quantity=1)"},{"description":"Send ERC1155 tokens to recipient (multiple quantity)","request":{"body":{"from":"0x1234567890123456789012345678901234567890","chainId":137,"recipients":[{"address":"0xabcdefabcdefabcdefabcdefabcdefabcdefabcd","quantity":"5"}],"tokenAddress":"0x2953399124f0cbb46d2cbacd8a89cf0599974963","tokenId":"456"},"headers":{"x-secret-key":"your-secret-key"}},"response":{"result":{"transactionIds":["0xabcdef1234567890..."]}},"summary":"ERC1155 Token Transfer (quantity>1)"}],"operationId":"sendTokens","summary":"Send Tokens","tags":["Wallets"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"from":{"type":"string","description":"The wallet address or ENS name that will send the tokens."},"chainId":{"type":"integer","minimum":0,"exclusiveMinimum":true,"description":"The blockchain network identifier where the transfer will be executed."},"recipients":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string","description":"The recipient wallet address or ENS name"},"quantity":{"type":"string","description":"The amount to send. For native tokens and ERC20: amount in wei/smallest unit. For ERC721: should be '1'. For ERC1155: the number of tokens to transfer."}},"required":["address","quantity"]},"minItems":1,"maxItems":100,"description":"Array of recipients and quantities. Maximum 100 recipients per request."},"tokenAddress":{"type":"string","description":"The token contract address. Omit for native token (ETH, MATIC, etc.) transfers."},"tokenId":{"type":"string","description":"The token ID for NFT transfers (ERC721/ERC1155). Required for NFT transfers."}},"required":["from","chainId","recipients"],"description":"Request body for sending tokens to multiple recipients. Supports native tokens, ERC20, ERC721, and ERC1155 transfers based on the provided parameters.","examples":[{"from":"0x1234567890123456789012345678901234567890","chainId":1,"recipients":[{"address":"0xabcdefabcdefabcdefabcdefabcdefabcdefabcd","quantity":"1000000000000000000"},{"address":"0x1111111111111111111111111111111111111111","quantity":"500000000000000000"}]}]}}}},"responses":{"200":{"description":"Tokens sent successfully. Returns transaction IDs for tracking and monitoring.","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"object","properties":{"transactionIds":{"type":"array","items":{"type":"string"},"description":"Array of transaction IDs for the submitted transfers. One ID per recipient."}},"required":["transactionIds"]}},"required":["result"]}}}},"400":{"description":"Invalid request parameters. This occurs when token parameters are malformed, insufficient balance, invalid contract data, or unsupported token type."},"401":{"description":"Authentication required. For backend usage, include `x-secret-key` header. For frontend usage, include `x-client-id` + `Authorization: Bearer <jwt>` headers."},"500":{"description":"Internal server error. This may occur due to blockchain connectivity issues, gas estimation failures, contract execution errors, or unexpected server errors."}}}},"/v1/contracts":{"get":{"description":"Retrieves a list of all smart contracts imported by the authenticated client on the thirdweb dashboard. This endpoint provides access to contracts that have been added to your dashboard for management and interaction. Results include contract metadata, deployment information, and import timestamps.\n\n**Authentication**: This endpoint requires backend authentication using the `x-secret-key` header. The secret key should never be exposed publicly.\n\n**Note**: For detailed contract metadata including compilation information, ABI, and source code, use the dedicated metadata endpoint: `GET /v1/contracts/{chainId}/{address}/metadata`.","examples":[{"description":"Get the first 20 contracts imported by the client","request":{"query":{"limit":20,"page":1}},"response":{"result":{"contracts":[{"address":"0xA0b86a33E6411E3036C1C4c7E815D0a82e3F5fD6","chainId":1,"deployedAt":"2023-01-15T10:30:00Z","importedAt":"2023-01-16T14:20:00Z","name":"MyToken","symbol":"MTK","type":"ERC20"},{"address":"0x1234567890abcdef1234567890abcdef12345678","chainId":137,"deployedAt":"2023-02-01T09:15:00Z","importedAt":"2023-02-01T11:45:00Z","name":"MyNFT","type":"ERC721"}],"meta":{"limit":20,"page":1,"totalItems":45,"totalPages":3}}}}],"operationId":"listContracts","summary":"List Contracts","tags":["Contracts"],"parameters":[{"schema":{"type":"integer","minimum":1,"maximum":100,"default":20,"description":"The number of contracts to return (default: 20, max: 100)."},"required":false,"description":"The number of contracts to return (default: 20, max: 100).","name":"limit","in":"query"},{"schema":{"type":"integer","minimum":1,"default":1,"description":"The page number for pagination (default: 1)."},"required":false,"description":"The page number for pagination (default: 1).","name":"page","in":"query"}],"responses":{"200":{"description":"Successfully retrieved list of contracts","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"object","properties":{"contracts":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string","description":"The contract address."},"chainId":{"type":"string","description":"The chain ID where the contract is deployed."},"deployedAt":{"type":"string","description":"The date when the contract was deployed."},"id":{"type":"string","description":"The contract ID."},"importedAt":{"type":"string","description":"The date when the contract was imported to the dashboard."},"name":{"type":"string","description":"The contract name, if available."},"symbol":{"type":"string","description":"The contract symbol, if available."},"type":{"type":"string","description":"The contract type (e.g., ERC20, ERC721, etc.)."}},"required":["address","chainId","importedAt"],"description":"Contract details enriched with additional project information from the API server."},"description":"Array of contracts imported by the client."},"pagination":{"type":"object","properties":{"hasMore":{"type":"boolean","description":"Whether there are more items available"},"limit":{"type":"number","nullable":true,"default":20,"description":"Number of items per page"},"page":{"type":"number","nullable":true,"default":1,"description":"Current page number"},"totalCount":{"type":"number","nullable":true,"description":"Total number of items available"}}}},"required":["contracts","pagination"]}},"required":["result"]}}}},"400":{"description":"Invalid request parameters"},"401":{"description":"Authentication required. The request must include a valid `x-secret-key` header for backend authentication."},"429":{"description":"Rate limit exceeded"},"500":{"description":"Internal server error"}}},"post":{"description":"Deploy a new smart contract to a blockchain network using raw bytecode. This endpoint allows you to deploy contracts by providing the contract bytecode, ABI, constructor parameters, and optional salt for deterministic deployment.\n\n**Authentication**: This endpoint requires backend authentication using the `x-secret-key` header. The secret key should never be exposed publicly.","examples":[{"description":"Deploy a contract with constructor parameters","request":{"body":{"chainId":421614,"from":"0xd8da6bf26964af9d7eed9e03e53415d37aa96045","bytecode":"0x608060405234801561001057600080fd5b50...","abi":[{"type":"constructor","inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"}]},{"type":"function","name":"name","inputs":[],"outputs":[{"type":"string"}],"stateMutability":"view"}],"constructorParams":{"_name":"MyToken","_symbol":"MTK"},"salt":"unique-salt-value"}},"response":{"result":{"address":"0xA0b86a33E6411E3036C1C4c7E815D0a82e3F5fD6","chainId":421614,"transactionId":"abc123..."}}}],"operationId":"deployContract","summary":"Deploy Contract","tags":["Contracts"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"chainId":{"type":"integer","minimum":0,"exclusiveMinimum":true,"description":"The blockchain network identifier. Common values include: 1 (Ethereum), 8453 (Base), 137 (Polygon), 56 (BSC), 43114 (Avalanche), 42161 (Arbitrum), 10 (Optimism)."},"from":{"type":"string","description":"The wallet address or ENS name that will deploy the contract."},"bytecode":{"type":"string","description":"The contract bytecode as a hex string."},"abi":{"type":"array","items":{"nullable":true},"description":"The contract ABI array."},"constructorParams":{"type":"object","additionalProperties":{"nullable":true},"description":"Object containing constructor parameters for the contract deployment (e.g., { param1: 'value1', param2: 123 })."},"salt":{"type":"string","description":"Optional salt value for deterministic contract deployment."}},"required":["chainId","from","bytecode","abi"],"description":"Contract deployment specification for raw bytecode deployment.","example":{"chainId":1,"from":"0x1234567890123456789012345678901234567890","bytecode":"0x608060405234801561001057600080fd5b50...","abi":[{"type":"constructor","inputs":[{"name":"defaultAdmin","type":"address"}]},{"type":"function","name":"name","inputs":[],"outputs":[{"type":"string"}],"stateMutability":"view"}],"constructorParams":{"defaultAdmin":"0x1234567890123456789012345678901234567890"}}}}}},"responses":{"200":{"description":"Contract deployed successfully","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"object","properties":{"address":{"type":"string","description":"The deployed contract address."},"chainId":{"type":"number","description":"The chain ID where the contract was deployed."},"transactionId":{"type":"string","description":"The unique identifier for the transaction that deployed the contract. Will not be returned if the contract was already deployed at the predicted address."}},"required":["address","chainId"]}},"required":["result"]}}}},"400":{"description":"Invalid request parameters"},"401":{"description":"Authentication required. The request must include a valid `x-secret-key` header for backend authentication."},"429":{"description":"Rate limit exceeded"},"500":{"description":"Internal server error"}}}},"/v1/contracts/read":{"post":{"description":"Executes multiple read-only contract method calls in a single batch request. This endpoint allows efficient batch reading from multiple contracts on the same chain, significantly reducing the number of HTTP requests needed. Each call specifies the contract address, method signature, and optional parameters. Results are returned in the same order as the input calls, with individual success/failure status for each operation.\n\n**Authentication**: Pass `x-client-id` header for frontend usage from allowlisted origins or `x-secret-key` for backend usage.","examples":[{"description":"Get multiple ERC-20 token balances and metadata in one request","request":{"body":{"calls":[{"contractAddress":"0xb2aA3511A31327d47D562c292D8B445A900B2ABf","method":"function getDeposit() view returns (uint256)"},{"contractAddress":"0xBD0334AC7FADA28CcD27Fa09838e9EA4c39117Db","method":"function getDeposit() view returns (uint256)"}],"chainId":42161}},"response":{"result":[{"data":"251847784224398164","success":true},{"data":"119499816836484582","success":true}]},"summary":"Batch ERC-20 Token Data"},{"description":"Read from multiple different contracts on the same chain","request":{"body":{"calls":[{"contractAddress":"0xb2aA3511A31327d47D562c292D8B445A900B2ABf","method":"function getDeposit() view returns (uint256)"},{"contractAddress":"0xBD0334AC7FADA28CcD27Fa09838e9EA4c39117Db","method":"function getDeposit() view returns (uint256)"}],"chainId":42161}},"response":{"result":[{"data":"251847784224398164","success":true},{"data":"119499816836484582","success":true}]},"summary":"Multi-Contract Read on Polygon"},{"description":"Handling failed contract reads with error responses","request":{"body":{"calls":[{"contractAddress":"0xA0b86a33E6411E3036C1C4c7E815D0a82e3F5fD6","method":"function balanceOf(address) view returns (uint256)","params":["0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6"]},{"contractAddress":"0x0000000000000000000000000000000000000000","method":"function invalidMethod() view returns (uint256)"}],"chainId":1}},"response":{"result":[{"data":"1000000000000000000","success":true},{"data":null,"error":"Contract method call failed","success":false}]},"summary":"Mixed Success and Error Results"}],"operationId":"readContract","summary":"Read Contract","tags":["Contracts"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"calls":{"type":"array","items":{"type":"object","properties":{"contractAddress":{"type":"string","description":"The smart contract address or ENS name."},"method":{"type":"string","pattern":"^function\\s+\\w+","description":"The contract function signature to call (e.g., 'function approve(address spender, uint256 amount)' or `function balanceOf(address)`). Must start with 'function' followed by the function name and parameters as defined in the contract ABI."},"params":{"type":"array","items":{"nullable":true},"description":"Array of parameters to pass to the contract method, in the correct order and format."},"value":{"type":"string","description":"Amount of native token to send with the transaction in wei. Required for payable methods."}},"required":["contractAddress","method"]},"minItems":1,"description":"Array of contract method calls to execute. Each call specifies a contract address, method signature, and optional parameters."},"chainId":{"type":"integer","minimum":0,"exclusiveMinimum":true,"description":"The blockchain network identifier. Common values include: 1 (Ethereum), 8453 (Base), 137 (Polygon), 56 (BSC), 43114 (Avalanche), 42161 (Arbitrum), 10 (Optimism)."}},"required":["calls","chainId"],"example":{"calls":[{"contractAddress":"0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913","method":"function name() view returns (string)"},{"contractAddress":"0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913","method":"function totalSupply() returns (uint256)"},{"contractAddress":"0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913","method":"function balanceOf(address) returns (uint256)","params":["0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6"]}],"chainId":8453}}}}},"responses":{"200":{"description":"Contract read operations completed successfully. Returns an array of results corresponding to each input call, including both successful and failed operations.","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"array","items":{"type":"object","properties":{"data":{"nullable":true,"description":"The result of the contract read operation. The type and format depend on the method's return value as defined in the contract ABI."},"error":{"type":"string","description":"Error message if the contract read operation failed."},"success":{"type":"boolean","description":"Indicates whether the contract read operation was successful."}},"required":["success"]},"description":"Array of results corresponding to each contract read call. Results are returned in the same order as the input calls."}},"required":["result"]}}}},"400":{"description":"Invalid request parameters. This occurs when the chainId is not supported, contract addresses are invalid, function signatures are malformed, or the calls array is empty."},"401":{"description":"Authentication required. The request must include a valid `x-client-id` header for frontend usage or x-secret-key for backend usage."},"500":{"description":"Internal server error. This may occur due to engine connectivity issues, RPC node unavailability, or unexpected server errors."}}}},"/v1/contracts/write":{"post":{"description":"Executes write operations (transactions) on smart contracts. This is a convenience endpoint that simplifies contract interaction by accepting method signatures and parameters directly, without requiring manual transaction encoding. All calls are executed against the same contract address and chain, making it ideal for batch operations.\n\n**Authentication**: This endpoint requires project authentication and wallet authentication. For backend usage, use `x-secret-key` header. For frontend usage, use `x-client-id` + `Authorization: Bearer <jwt>` headers.","examples":[{"description":"Execute a single ERC-20 token approval transaction (backend usage)","request":{"body":{"calls":[{"contractAddress":"0xA0b86a33E6411E3036C1C4c7E815D0a82e3F5fD6","method":"function approve(address spender, uint256 amount)","params":["0x1234567890123456789012345678901234567890","1000000000000000000"]}],"chainId":1,"from":"0x1234567890123456789012345678901234567890"},"headers":{"x-secret-key":"your-secret-key"}},"response":{"result":{"transactionIds":["0xabcdef1234567890..."]}},"summary":"Single Token Approval (Backend)"},{"description":"Batch multiple contract calls in a single request (frontend usage)","request":{"body":{"calls":[{"contractAddress":"0x2953399124F0cBB46d2CbACD8A89cF0599974963","method":"function setApprovalForAll(address operator, bool approved)","params":["0x1234567890123456789012345678901234567890",true]},{"contractAddress":"0x2953399124F0cBB46d2CbACD8A89cF0599974963","method":"function mint(address to, uint256 tokenId)","params":["0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6",42]}],"chainId":137,"from":"0x1234567890123456789012345678901234567890"},"headers":{"Authorization":"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...","x-client-id":"your-client-id"}},"response":{"result":{"transactionIds":["0xabcdef1234567890...","0x1234567890abcdef..."]}},"summary":"Batch NFT Operations (Frontend)"},{"description":"Execute payable contract method with native token value (backend usage)","request":{"body":{"calls":[{"contractAddress":"0x1234567890123456789012345678901234567890","method":"function purchase(uint256 amount)","params":[5],"value":"50000000000000000"}],"chainId":84532,"from":"0x1234567890123456789012345678901234567890"},"headers":{"x-secret-key":"your-secret-key"}},"response":{"result":{"transactionIds":["0x1234567890abcdef..."]}},"summary":"Payable Method with Value (Backend)"}],"operationId":"writeContract","summary":"Write Contract","tags":["Contracts"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"calls":{"type":"array","items":{"type":"object","properties":{"contractAddress":{"type":"string","description":"The smart contract address or ENS name."},"method":{"type":"string","pattern":"^function\\s+\\w+","description":"The contract function signature to call (e.g., 'function approve(address spender, uint256 amount)' or `function balanceOf(address)`). Must start with 'function' followed by the function name and parameters as defined in the contract ABI."},"params":{"type":"array","items":{"nullable":true},"description":"Array of parameters to pass to the contract method, in the correct order and format."},"value":{"type":"string","description":"Amount of native token to send with the transaction in wei. Required for payable methods."}},"required":["contractAddress","method"]},"minItems":1,"description":"Array of contract method calls to execute. Each call specifies a contract address, method signature, and optional parameters."},"chainId":{"type":"integer","minimum":0,"exclusiveMinimum":true,"description":"The blockchain network identifier. Common values include: 1 (Ethereum), 8453 (Base), 137 (Polygon), 56 (BSC), 43114 (Avalanche), 42161 (Arbitrum), 10 (Optimism)."},"from":{"type":"string","description":"The wallet address or ENS name that will send the transaction."}},"required":["calls","chainId","from"],"example":{"calls":[{"contractAddress":"0xe352Cf5f74e3ACfd2d59EcCee6373d2Aa996086e","method":"function approve(address spender, uint256 amount)","params":["0x4fA9230f4E8978462cE7Bf8e6b5a2588da5F4264",1000000000]}],"chainId":84532,"from":"0x1234567890123456789012345678901234567890"}}}}},"responses":{"200":{"description":"Contract write operations submitted successfully. Returns transaction IDs for tracking and monitoring.","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"object","properties":{"transactionIds":{"type":"array","items":{"type":"string"},"description":"Array of unique identifiers for the submitted transactions. Use these to track transaction status."}},"required":["transactionIds"]}},"required":["result"]}}}},"400":{"description":"Invalid request parameters. This occurs when contract parameters are malformed, method signatures are invalid, insufficient balance, or unsupported contract methods."},"401":{"description":"Authentication required. For backend usage, include `x-secret-key` header. For frontend usage, include `x-client-id` + `Authorization: Bearer <jwt>` headers."},"404":{"description":"Contract not found. The specified contract address does not exist on the given blockchain network or is not accessible."},"500":{"description":"Internal server error. This may occur due to blockchain connectivity issues, gas estimation failures, contract execution errors, or unexpected server errors."}}}},"/v1/contracts/{chainId}/{address}/transactions":{"get":{"description":"Retrieves transactions for a specific smart contract address on a specific blockchain network. This endpoint provides comprehensive transaction data including block information, gas details, transaction status, and function calls. Results can be filtered, paginated, and sorted to meet specific requirements.\n\n**Authentication**: Pass `x-client-id` header for frontend usage from allowlisted origins or `x-secret-key` for backend usage.","examples":[{"description":"Get recent transactions for an ERC-20 token contract on Ethereum mainnet","request":{"params":{"chainId":1,"address":"0xA0b86a33E6411E3036C1C4c7E815D0a82e3F5fD6"},"query":{"limit":10,"sortOrder":"desc"}},"response":{"result":{"data":[{"blockHash":"0x3a1fba5abd9d41457944e91ed097e039b7b12d3d7ba324a3f422db2277a48e28","blockNumber":18500000,"blockTimestamp":1698000000,"chainId":"1","data":"0xa9059cbb000000000000000000000000742d35cc6634c0532925a3b8d43c67b8c8b3e9c60000000000000000000000000000000000000000000000000de0b6b3a7640000","effectiveGasPrice":"20000000000","fromAddress":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6","functionSelector":"0xa9059cbb","gas":50000,"gasPrice":"20000000000","gasUsed":21000,"hash":"0x218b632d932371478d1ae5a01620ebab1a2030f9dad6f8fba4a044ea6335a57e","nonce":42,"status":1,"toAddress":"0xA0b86a33E6411E3036C1C4c7E815D0a82e3F5fD6","transactionIndex":100,"value":"0"}],"meta":{"address":"0xA0b86a33E6411E3036C1C4c7E815D0a82e3F5fD6","chainId":1,"limit":10,"page":0,"totalItems":1500,"totalPages":150}}},"summary":"ERC-20 Token Transactions"},{"description":"Get transactions for a Polygon contract","request":{"params":{"chainId":137,"address":"0x2953399124F0cBB46d2CbACD8A89cF0599974963"},"query":{"limit":5,"page":0}},"response":{"result":{"data":[{"blockHash":"0x3a1fba5abd9d41457944e91ed097e039b7b12d3d7ba324a3f422db2277a48e28","blockNumber":18500000,"blockTimestamp":1698000000,"chainId":"137","data":"0x40c10f19000000000000000000000000742d35cc6634c0532925a3b8d43c67b8c8b3e9c6000000000000000000000000000000000000000000000000000000000000002a","effectiveGasPrice":"20000000000","fromAddress":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6","functionSelector":"0x40c10f19","gas":80000,"gasPrice":"20000000000","gasUsed":65000,"hash":"0x218b632d932371478d1ae5a01620ebab1a2030f9dad6f8fba4a044ea6335a57e","nonce":42,"status":1,"toAddress":"0x2953399124F0cBB46d2CbACD8A89cF0599974963","transactionIndex":100,"value":"0"}],"meta":{"address":"0x2953399124F0cBB46d2CbACD8A89cF0599974963","chainId":137,"limit":5,"page":0,"totalItems":750,"totalPages":150}}},"summary":"Polygon Contract Transactions"},{"description":"Get contract transactions with ABI decoding (always enabled)","request":{"params":{"chainId":1,"address":"0xA0b86a33E6411E3036C1C4c7E815D0a82e3F5fD6"},"query":{"limit":5}},"response":{"result":{"data":[{"blockHash":"0x3a1fba5abd9d41457944e91ed097e039b7b12d3d7ba324a3f422db2277a48e28","blockNumber":18500000,"blockTimestamp":1698000000,"chainId":"1","data":"0xa9059cbb000000000000000000000000742d35cc6634c0532925a3b8D43C67B8c8B3E9C60000000000000000000000000000000000000000000000000de0b6b3a7640000","decoded":{"inputs":{"amount":"1000000000000000000","to":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6"},"name":"transfer","signature":"transfer(address,uint256)"},"effectiveGasPrice":"20000000000","fromAddress":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6","functionSelector":"0xa9059cbb","gas":50000,"gasPrice":"20000000000","gasUsed":21000,"hash":"0x218b632d932371478d1ae5a01620ebab1a2030f9dad6f8fba4a044ea6335a57e","nonce":42,"status":1,"toAddress":"0xA0b86a33E6411E3036C1C4c7E815D0a82e3F5fD6","transactionIndex":100,"value":"0"}],"meta":{"address":"0xA0b86a33E6411E3036C1C4c7E815D0a82e3F5fD6","chainId":1,"limit":5,"page":0,"totalItems":500,"totalPages":100}}},"summary":"Contract Transactions with Decoding"}],"operationId":"getContractTransactions","summary":"Get Transactions","tags":["Contracts"],"parameters":[{"schema":{"type":"integer","minimum":0,"exclusiveMinimum":true,"description":"The blockchain network identifier where the contract is deployed."},"required":true,"description":"The blockchain network identifier where the contract is deployed.","name":"chainId","in":"path"},{"schema":{"type":"string","description":"The smart contract address or ENS name."},"required":true,"description":"The smart contract address or ENS name.","name":"address","in":"path"},{"schema":{"type":"string","description":"Filter by transaction sender address"},"required":false,"description":"Filter by transaction sender address","name":"filterFromAddress","in":"query"},{"schema":{"type":"string","description":"Filter by transaction recipient address"},"required":false,"description":"Filter by transaction recipient address","name":"filterToAddress","in":"query"},{"schema":{"type":"integer","nullable":true,"minimum":0,"description":"Filter by block timestamp (Unix timestamp) greater than or equal to this value"},"required":false,"description":"Filter by block timestamp (Unix timestamp) greater than or equal to this value","name":"filterBlockTimestampGte","in":"query"},{"schema":{"type":"integer","nullable":true,"minimum":0,"description":"Filter by block timestamp (Unix timestamp) less than or equal to this value"},"required":false,"description":"Filter by block timestamp (Unix timestamp) less than or equal to this value","name":"filterBlockTimestampLte","in":"query"},{"schema":{"type":"integer","nullable":true,"minimum":0,"description":"Filter by block number greater than or equal to this value"},"required":false,"description":"Filter by block number greater than or equal to this value","name":"filterBlockNumberGte","in":"query"},{"schema":{"type":"integer","nullable":true,"minimum":0,"description":"Filter by block number less than or equal to this value"},"required":false,"description":"Filter by block number less than or equal to this value","name":"filterBlockNumberLte","in":"query"},{"schema":{"type":"string","description":"Filter by transaction value (in wei) greater than this value"},"required":false,"description":"Filter by transaction value (in wei) greater than this value","name":"filterValueGt","in":"query"},{"schema":{"type":"string","description":"Filter by function selector (4-byte method ID), e.g., '0xa9059cbb' for ERC-20 transfer"},"required":false,"description":"Filter by function selector (4-byte method ID), e.g., '0xa9059cbb' for ERC-20 transfer","name":"filterFunctionSelector","in":"query"},{"schema":{"type":"number","nullable":true,"default":1,"description":"Current page number"},"required":false,"description":"Current page number","name":"page","in":"query"},{"schema":{"type":"number","nullable":true,"default":20,"description":"Number of items per page"},"required":false,"description":"Number of items per page","name":"limit","in":"query"},{"schema":{"type":"string","enum":["asc","desc"],"default":"desc","description":"Sort order: 'asc' for ascending, 'desc' for descending"},"required":false,"description":"Sort order: 'asc' for ascending, 'desc' for descending","name":"sortOrder","in":"query"}],"responses":{"200":{"description":"Contract transactions retrieved successfully. Returns transaction data with metadata including pagination information. Includes decoded function calls when ABI is available.","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{"blockHash":{"type":"string","description":"The hash of the block containing this transaction."},"blockNumber":{"type":"number","description":"The block number containing this transaction."},"blockTimestamp":{"type":"number","description":"The timestamp of the block (Unix timestamp)."},"chainId":{"type":"string","description":"The chain ID where the transaction occurred."},"contractAddress":{"type":"string","description":"Contract address created if this was a contract creation transaction."},"cumulativeGasUsed":{"type":"number","description":"Total gas used by all transactions in this block up to and including this one."},"data":{"type":"string","description":"The transaction input data."},"decoded":{"type":"object","properties":{"inputs":{"type":"object","additionalProperties":{"nullable":true},"description":"Object containing decoded function parameters."},"name":{"type":"string","description":"The function name."},"signature":{"type":"string","description":"The function signature."}},"required":["inputs","name","signature"],"description":"Decoded transaction data (included when ABI is available)."},"effectiveGasPrice":{"type":"string","description":"The effective gas price paid (in wei as string)."},"fromAddress":{"type":"string","description":"The address that initiated the transaction."},"functionSelector":{"type":"string","description":"The function selector (first 4 bytes of the transaction data)."},"gas":{"type":"number","description":"The gas limit for the transaction."},"gasPrice":{"type":"string","description":"The gas price used for the transaction (in wei as string)."},"gasUsed":{"type":"number","description":"The amount of gas used by the transaction."},"hash":{"type":"string","description":"The transaction hash."},"maxFeePerGas":{"type":"string","description":"Maximum fee per gas (EIP-1559)."},"maxPriorityFeePerGas":{"type":"string","description":"Maximum priority fee per gas (EIP-1559)."},"nonce":{"type":"number","description":"The transaction nonce."},"status":{"type":"number","description":"The transaction status (1 for success, 0 for failure)."},"toAddress":{"type":"string","description":"The address that received the transaction."},"transactionIndex":{"type":"number","description":"The index of the transaction within the block."},"transactionType":{"type":"number","description":"The transaction type (0=legacy, 1=EIP-2930, 2=EIP-1559)."},"value":{"type":"string","description":"The value transferred in the transaction (in wei as string)."}},"required":["blockHash","blockNumber","blockTimestamp","chainId","data","fromAddress","functionSelector","gas","gasPrice","hash","nonce","status","toAddress","transactionIndex","value"]},"description":"Array of contract transactions."},"pagination":{"type":"object","properties":{"hasMore":{"type":"boolean","description":"Whether there are more items available"},"limit":{"type":"number","nullable":true,"default":20,"description":"Number of items per page"},"page":{"type":"number","nullable":true,"default":1,"description":"Current page number"},"totalCount":{"type":"number","nullable":true,"description":"Total number of items available"}}}},"required":["data","pagination"]}},"required":["result"]}}}},"400":{"description":"Invalid request parameters. This occurs when the contract address or chainId format is invalid, or pagination parameters are out of range."},"401":{"description":"Authentication required. The request must include a valid `x-client-id` header for frontend usage or x-secret-key for backend usage."},"404":{"description":"Contract not found or no transactions available for the specified contract address on the given blockchain network."},"500":{"description":"Internal server error. This may occur due to network connectivity issues, external service unavailability, or unexpected server errors."}}}},"/v1/contracts/{chainId}/{address}/events":{"get":{"description":"Retrieves events emitted by a specific smart contract address on a specific blockchain network. This endpoint provides comprehensive event data including block information, transaction details, event topics, and optional ABI decoding. Results can be filtered, paginated, and sorted to meet specific requirements.\n\n**Authentication**: Pass `x-client-id` header for frontend usage from allowlisted origins or `x-secret-key` for backend usage.","examples":[{"description":"Get recent Transfer events from an ERC-20 token contract on Ethereum mainnet","request":{"params":{"chainId":1,"address":"0xA0b86a33E6411E3036C1C4c7E815D0a82e3F5fD6"},"query":{"limit":10,"sortOrder":"desc"}},"response":{"result":{"data":[{"address":"0xA0b86a33E6411E3036C1C4c7E815D0a82e3F5fD6","blockHash":"0x3a1fba5abd9d41457944e91ed097e039b7b12d3d7ba324a3f422db2277a48e28","blockNumber":18500000,"blockTimestamp":1698000000,"chainId":"1","data":"0x0000000000000000000000000000000000000000000000000de0b6b3a7640000","decoded":{"indexedParams":{"from":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6","to":"0xA0b86a33E6411E3036C1C4c7E815D0a82e3F5fD6"},"name":"Transfer","nonIndexedParams":{"value":"1000000000000000000"},"signature":"Transfer(address,address,uint256)"},"logIndex":5,"topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x000000000000000000000000742d35cc6634c0532925a3b8d43c67b8c8b3e9c6","0x000000000000000000000000a0b86a33e6411e3036c1c4c7e815d0a82e3f5fd6"],"transactionHash":"0x218b632d932371478d1ae5a01620ebab1a2030f9dad6f8fba4a044ea6335a57e","transactionIndex":100}],"meta":{"address":"0xA0b86a33E6411E3036C1C4c7E815D0a82e3F5fD6","chainId":1,"limit":10,"page":0,"totalItems":5000,"totalPages":500}}},"summary":"ERC-20 Transfer Events with Decoding"},{"description":"Get events from a Polygon contract","request":{"params":{"chainId":137,"address":"0x2953399124F0cBB46d2CbACD8A89cF0599974963"},"query":{"limit":5,"page":0}},"response":{"result":{"data":[{"address":"0x2953399124F0cBB46d2CbACD8A89cF0599974963","blockHash":"0x3a1fba5abd9d41457944e91ed097e039b7b12d3d7ba324a3f422db2277a48e28","blockNumber":18500000,"blockTimestamp":1698000000,"chainId":"137","data":"0x000000000000000000000000000000000000000000000000000000000000002a","logIndex":2,"topics":["0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","0x000000000000000000000000742d35cc6634c0532925a3b8d43c67b8c8b3e9c6","0x0000000000000000000000002953399124f0cbb46d2cbacd8a89cf0599974963"],"transactionHash":"0x218b632d932371478d1ae5a01620ebab1a2030f9dad6f8fba4a044ea6335a57e","transactionIndex":100}],"meta":{"address":"0x2953399124F0cBB46d2CbACD8A89cF0599974963","chainId":137,"limit":5,"page":0,"totalItems":2500,"totalPages":500}}},"summary":"Polygon Contract Events"}],"operationId":"getContractEvents","summary":"Get Events","tags":["Contracts"],"parameters":[{"schema":{"type":"integer","minimum":0,"exclusiveMinimum":true,"description":"The blockchain network identifier where the contract is deployed."},"required":true,"description":"The blockchain network identifier where the contract is deployed.","name":"chainId","in":"path"},{"schema":{"type":"string","description":"The smart contract address or ENS name."},"required":true,"description":"The smart contract address or ENS name.","name":"address","in":"path"},{"schema":{"type":"string","description":"Filter by event signature hash, e.g., '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef' for Transfer event"},"required":false,"description":"Filter by event signature hash, e.g., '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef' for Transfer event","name":"signature","in":"query"},{"schema":{"type":"string","description":"Filter by event topic 0 (event signature hash)"},"required":false,"description":"Filter by event topic 0 (event signature hash)","name":"filterTopic0","in":"query"},{"schema":{"type":"string","description":"Filter by event topic 1"},"required":false,"description":"Filter by event topic 1","name":"filterTopic1","in":"query"},{"schema":{"type":"string","description":"Filter by event topic 2"},"required":false,"description":"Filter by event topic 2","name":"filterTopic2","in":"query"},{"schema":{"type":"string","description":"Filter by event topic 3"},"required":false,"description":"Filter by event topic 3","name":"filterTopic3","in":"query"},{"schema":{"type":"integer","nullable":true,"minimum":0,"description":"Filter by block timestamp (Unix timestamp) greater than or equal to this value"},"required":false,"description":"Filter by block timestamp (Unix timestamp) greater than or equal to this value","name":"filterBlockTimestampGte","in":"query"},{"schema":{"type":"integer","nullable":true,"minimum":0,"description":"Filter by block timestamp (Unix timestamp) less than or equal to this value"},"required":false,"description":"Filter by block timestamp (Unix timestamp) less than or equal to this value","name":"filterBlockTimestampLte","in":"query"},{"schema":{"type":"integer","nullable":true,"minimum":0,"description":"Filter by block number greater than or equal to this value"},"required":false,"description":"Filter by block number greater than or equal to this value","name":"filterBlockNumberGte","in":"query"},{"schema":{"type":"integer","nullable":true,"minimum":0,"description":"Filter by block number less than or equal to this value"},"required":false,"description":"Filter by block number less than or equal to this value","name":"filterBlockNumberLte","in":"query"},{"schema":{"type":"number","nullable":true,"default":1,"description":"Current page number"},"required":false,"description":"Current page number","name":"page","in":"query"},{"schema":{"type":"number","nullable":true,"default":20,"description":"Number of items per page"},"required":false,"description":"Number of items per page","name":"limit","in":"query"},{"schema":{"type":"string","enum":["asc","desc"],"default":"desc","description":"Sort order: 'asc' for ascending, 'desc' for descending"},"required":false,"description":"Sort order: 'asc' for ascending, 'desc' for descending","name":"sortOrder","in":"query"}],"responses":{"200":{"description":"Contract events retrieved successfully. Returns event data with metadata including pagination information. Includes decoded event parameters when ABI is available.","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"object","properties":{"events":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string","description":"The contract address that emitted the event."},"blockHash":{"type":"string","description":"The hash of the block containing this event."},"blockNumber":{"type":"number","description":"The block number where the event was emitted."},"blockTimestamp":{"type":"number","description":"The timestamp of the block (Unix timestamp)."},"chainId":{"type":"string","description":"The chain ID where the event occurred."},"data":{"type":"string","description":"The non-indexed event data as a hex string."},"decoded":{"type":"object","properties":{"name":{"type":"string","description":"The event name."},"params":{"type":"object","additionalProperties":{"nullable":true},"description":"Object containing decoded parameters."},"signature":{"type":"string","description":"The event signature."}},"required":["name","params","signature"],"description":"Decoded event data (included when ABI is available)."},"logIndex":{"type":"number","description":"The index of the log within the transaction."},"topics":{"type":"array","items":{"type":"string"},"description":"Array of indexed event topics (including event signature)."},"transactionHash":{"type":"string","description":"The hash of the transaction containing this event."},"transactionIndex":{"type":"number","description":"The index of the transaction within the block."}},"required":["address","blockHash","blockNumber","blockTimestamp","chainId","data","logIndex","topics","transactionHash","transactionIndex"]},"description":"Array of contract events."},"pagination":{"type":"object","properties":{"hasMore":{"type":"boolean","description":"Whether there are more items available"},"limit":{"type":"number","nullable":true,"default":20,"description":"Number of items per page"},"page":{"type":"number","nullable":true,"default":1,"description":"Current page number"},"totalCount":{"type":"number","nullable":true,"description":"Total number of items available"}}}},"required":["events","pagination"]}},"required":["result"]}}}},"400":{"description":"Invalid request parameters. This occurs when the contract address or chainId format is invalid, or pagination parameters are out of range."},"401":{"description":"Authentication required. The request must include a valid `x-client-id` header for frontend usage or x-secret-key for backend usage."},"404":{"description":"Contract not found or no events available for the specified contract address on the given blockchain network."},"500":{"description":"Internal server error. This may occur due to network connectivity issues, external service unavailability, or unexpected server errors."}}}},"/v1/contracts/{chainId}/{address}/metadata":{"get":{"description":"Retrieves detailed metadata for a specific smart contract from the thirdweb contract metadata service. This includes compilation information, ABI, documentation, and other contract-related metadata. Note: Source code is excluded from the response to keep it lightweight and suitable for programmatic access.\n\n**Authentication**: This endpoint requires backend authentication using the `x-secret-key` header. The secret key should never be exposed publicly.\n\n**Metadata Source**: The metadata is fetched from the thirdweb contract metadata service and includes detailed Solidity compilation information, contract ABI, and developer documentation.","examples":[{"description":"Get metadata for a contract on Ethereum mainnet","request":{"params":{"chainId":"1","address":"0xA0b86a33E6411E3036C1C4c7E815D0a82e3F5fD6"}},"response":{"result":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"type":"function","name":"balanceOf","inputs":[{"name":"wallet","type":"address"}],"outputs":[{"name":"","type":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transfer","inputs":[{"name":"to","type":"address"},{"name":"amount","type":"uint256"}],"outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable"}],"devdoc":{"methods":{"balanceOf(address)":{"details":"Returns the amount of tokens owned by wallet."}}},"userdoc":{"methods":{"transfer(address,uint256)":{"notice":"Transfers tokens to a specified address."}}}},"settings":{"compilationTarget":{"contracts/MyToken.sol":"MyToken"},"evmVersion":"london","optimizer":{"enabled":true,"runs":200},"remappings":["@openzeppelin/=node_modules/@openzeppelin/"]},"version":1}}}],"operationId":"getContractMetadata","summary":"Get Metadata","tags":["Contracts"],"parameters":[{"schema":{"type":"integer","minimum":0,"exclusiveMinimum":true,"description":"The blockchain network identifier where the contract is deployed."},"required":true,"description":"The blockchain network identifier where the contract is deployed.","name":"chainId","in":"path"},{"schema":{"type":"string","description":"The smart contract address or ENS name."},"required":true,"description":"The smart contract address or ENS name.","name":"address","in":"path"}],"responses":{"200":{"description":"Successfully retrieved contract metadata","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"object","properties":{"compiler":{"type":"object","properties":{"version":{"type":"string","description":"Solidity compiler version used to compile the contract."}},"required":["version"],"description":"Compiler information including version."},"language":{"type":"string","description":"Programming language of the contract (e.g., 'Solidity')."},"output":{"type":"object","properties":{"abi":{"type":"array","items":{"nullable":true},"description":"Contract ABI (Application Binary Interface) as an array of function/event/error definitions."},"devdoc":{"type":"object","additionalProperties":{"nullable":true},"description":"Developer documentation extracted from contract comments."},"userdoc":{"type":"object","additionalProperties":{"nullable":true},"description":"User documentation extracted from contract comments."}},"description":"Compilation output including ABI and documentation."},"settings":{"type":"object","properties":{"compilationTarget":{"type":"object","additionalProperties":{"type":"string"},"description":"Compilation target mapping source file names to contract names."},"evmVersion":{"type":"string","description":"EVM version target for compilation."},"libraries":{"type":"object","additionalProperties":{"nullable":true},"description":"Library addresses for linking."},"metadata":{"type":"object","properties":{"bytecodeHash":{"type":"string","description":"Hash method used for bytecode metadata."}},"description":"Metadata settings for compilation."},"optimizer":{"type":"object","properties":{"enabled":{"type":"boolean","description":"Whether optimizer is enabled."},"runs":{"type":"number","description":"Number of optimizer runs."}},"description":"Optimizer settings used during compilation."},"remappings":{"type":"array","items":{"type":"string"},"description":"Import remappings used during compilation."}},"description":"Compilation settings including optimization and target configuration."},"version":{"type":"number","description":"Metadata format version."}}}},"required":["result"],"description":"Contract metadata from the thirdweb contract metadata service."}}}},"400":{"description":"Invalid request parameters"},"401":{"description":"Authentication required. The request must include a valid `x-secret-key` header for backend authentication."},"404":{"description":"Contract metadata not found"},"429":{"description":"Rate limit exceeded"},"500":{"description":"Internal server error"}}}},"/v1/contracts/{chainId}/{address}/signatures":{"get":{"description":"Retrieves human-readable ABI signatures for a specific smart contract. This endpoint fetches the contract metadata from the thirdweb service, extracts the ABI, and converts it into an array of human-readable function and event signatures that can be used directly with contract interaction methods.\n\n**Authentication**: This endpoint requires backend authentication using the `x-secret-key` header. The secret key should never be exposed publicly.\n\n**Usage**: The returned signatures can be used directly in contract read/write operations or event filtering. Each signature follows the standard Solidity format and includes function parameters, return types, state mutability, and event indexing information.","examples":[{"description":"Get signatures for an ERC20 contract on Ethereum mainnet","request":{"params":{"chainId":"1","address":"0xA0b86a33E6411E3036C1C4c7E815D0a82e3F5fD6"}},"response":{"result":["event Transfer(indexed address from, indexed address to, uint256 value)","event Approval(indexed address owner, indexed address spender, uint256 value)","function name() view returns (string)","function symbol() view returns (string)","function decimals() view returns (uint8)","function totalSupply() view returns (uint256)","function balanceOf(address wallet) view returns (uint256)","function allowance(address owner, address spender) view returns (uint256)","function approve(address spender, uint256 amount) returns (bool)","function transfer(address to, uint256 amount) returns (bool)","function transferFrom(address from, address to, uint256 amount) returns (bool)"]}}],"operationId":"getContractSignatures","summary":"Get Signatures","tags":["Contracts"],"parameters":[{"schema":{"type":"integer","minimum":0,"exclusiveMinimum":true,"description":"The blockchain network identifier where the contract is deployed."},"required":true,"description":"The blockchain network identifier where the contract is deployed.","name":"chainId","in":"path"},{"schema":{"type":"string","description":"The smart contract address or ENS name."},"required":true,"description":"The smart contract address or ENS name.","name":"address","in":"path"}],"responses":{"200":{"description":"Successfully retrieved contract signatures","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"array","items":{"type":"string"},"description":"Array of human-readable ABI signatures including functions and events. Each signature is formatted as a string that can be used directly in contract read/write operations or event filtering."}},"required":["result"],"description":"Contract ABI signatures in human-readable format. These signatures can be used directly with contract interaction methods."}}}},"400":{"description":"Invalid request parameters"},"401":{"description":"Authentication required. The request must include a valid `x-secret-key` header for backend authentication."},"404":{"description":"Contract metadata not found or ABI is not available"},"429":{"description":"Rate limit exceeded"},"500":{"description":"Internal server error"}}}},"/v1/transactions/{transactionId}":{"get":{"description":"Retrieves detailed information about a specific transaction using its unique identifier. Returns comprehensive transaction data including execution status, blockchain details, and any associated metadata.\n\n**Authentication**: Pass `x-client-id` header for frontend usage from allowlisted origins or `x-secret-key` for backend usage.","examples":[{"description":"Fetch complete details for a specific transaction","request":{"params":{"transactionId":"0x1234567890abcdef"}},"response":{"result":{"chainId":"1","confirmedAt":"2025-07-01T12:01:00Z","confirmedAtBlockNumber":"20123456","createdAt":"2025-07-01T12:00:00Z","errorMessage":null,"from":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6","id":"0x1234567890abcdef","transactionHash":"0xabcdef1234567890..."}},"summary":"Get Transaction Details"}],"operationId":"getTransactionById","summary":"Get Transaction","tags":["Transactions"],"parameters":[{"schema":{"type":"string","description":"Unique identifier of the transaction to retrieve."},"required":true,"description":"Unique identifier of the transaction to retrieve.","name":"transactionId","in":"path"}],"responses":{"200":{"description":"Transaction details retrieved successfully. Returns comprehensive transaction information including status, blockchain details, and execution metadata.","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"object","properties":{"batchIndex":{"type":"integer","description":"Index within transaction batch"},"cancelledAt":{"type":"string","nullable":true,"description":"ISO timestamp when transaction was cancelled, if applicable"},"chainId":{"type":"string","description":"Blockchain network identifier as string"},"clientId":{"type":"string","description":"Client identifier that initiated the transaction"},"confirmedAt":{"type":"string","nullable":true,"description":"ISO timestamp when transaction was confirmed on-chain"},"confirmedAtBlockNumber":{"type":"string","nullable":true,"description":"Block number where transaction was confirmed"},"createdAt":{"type":"string","description":"ISO timestamp when transaction was created"},"enrichedData":{"nullable":true,"description":"Additional metadata and enriched transaction information"},"errorMessage":{"type":"string","nullable":true,"description":"Error message if transaction failed"},"executionParams":{"nullable":true,"description":"Parameters used for transaction execution"},"executionResult":{"nullable":true,"description":"Result data from transaction execution"},"from":{"type":"string","nullable":true,"description":"Sender wallet address"},"id":{"type":"string","description":"Unique transaction identifier"},"transactionHash":{"type":"string","nullable":true,"description":"On-chain transaction hash once confirmed"},"transactionParams":{"nullable":true,"description":"Original transaction parameters and data"},"status":{"type":"string","nullable":true,"enum":["QUEUED","SUBMITTED","CONFIRMED","FAILED"],"description":"Transaction status"}},"required":["batchIndex","cancelledAt","chainId","clientId","confirmedAt","confirmedAtBlockNumber","createdAt","errorMessage","from","id","transactionHash","status"]}},"required":["result"]}}}},"400":{"description":"Invalid request parameters. This occurs when the transaction ID format is invalid or malformed."},"401":{"description":"Authentication required. The request must include a valid `x-client-id` header for frontend usage or x-secret-key for backend usage."},"404":{"description":"Transaction not found. The specified transaction ID does not exist or is not associated with the authenticated client."},"500":{"description":"Internal server error. This may occur due to engine connectivity issues, database unavailability, or unexpected server errors."}}}},"/v1/transactions":{"get":{"description":"Retrieves a paginated list of transactions associated with the authenticated client. Results are sorted by creation date in descending order (most recent first). Supports filtering by wallet address and pagination controls.\n\n**Authentication**: Pass `x-client-id` header for frontend usage from allowlisted origins or `x-secret-key` for backend usage.","examples":[{"description":"Fetch the first 20 transactions for all wallets","request":{"query":{"limit":20,"page":1}},"response":{"result":{"pagination":{"limit":20,"page":1,"totalCount":156},"transactions":[{"chainId":"1","confirmedAt":"2025-07-01T12:01:00Z","createdAt":"2025-07-01T12:00:00Z","from":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6","id":"0x1234567890abcdef","transactionHash":"0xabcdef1234567890..."}]}},"summary":"Get Recent Transactions"}],"operationId":"listTransactions","summary":"List Transactions","tags":["Transactions"],"parameters":[{"schema":{"type":"string","description":"Filter transactions by sender wallet address or ENS name."},"required":false,"description":"Filter transactions by sender wallet address or ENS name.","name":"from","in":"query"},{"schema":{"type":"integer","minimum":1,"maximum":100,"default":20,"description":"Number of transactions to return per page (1-100)."},"required":false,"description":"Number of transactions to return per page (1-100).","name":"limit","in":"query"},{"schema":{"type":"integer","minimum":1,"default":1,"description":"Page number for pagination, starting from 1."},"required":false,"description":"Page number for pagination, starting from 1.","name":"page","in":"query"}],"responses":{"200":{"description":"Transactions retrieved successfully. Returns a paginated list of transactions with metadata including creation and confirmation timestamps.","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"object","properties":{"pagination":{"type":"object","properties":{"hasMore":{"type":"boolean","description":"Whether there are more items available"},"limit":{"type":"number","nullable":true,"default":20,"description":"Number of items per page"},"page":{"type":"number","nullable":true,"default":1,"description":"Current page number"},"totalCount":{"type":"number","nullable":true,"description":"Total number of items available"}}},"transactions":{"type":"array","items":{"type":"object","properties":{"batchIndex":{"type":"integer","description":"Index within transaction batch"},"cancelledAt":{"type":"string","nullable":true,"description":"ISO timestamp when transaction was cancelled, if applicable"},"chainId":{"type":"string","description":"Blockchain network identifier as string"},"clientId":{"type":"string","description":"Client identifier that initiated the transaction"},"confirmedAt":{"type":"string","nullable":true,"description":"ISO timestamp when transaction was confirmed on-chain"},"confirmedAtBlockNumber":{"type":"string","nullable":true,"description":"Block number where transaction was confirmed"},"createdAt":{"type":"string","description":"ISO timestamp when transaction was created"},"enrichedData":{"nullable":true,"description":"Additional metadata and enriched transaction information"},"errorMessage":{"type":"string","nullable":true,"description":"Error message if transaction failed"},"executionParams":{"nullable":true,"description":"Parameters used for transaction execution"},"executionResult":{"nullable":true,"description":"Result data from transaction execution"},"from":{"type":"string","nullable":true,"description":"Sender wallet address"},"id":{"type":"string","description":"Unique transaction identifier"},"transactionHash":{"type":"string","nullable":true,"description":"On-chain transaction hash once confirmed"},"transactionParams":{"nullable":true,"description":"Original transaction parameters and data"},"status":{"type":"string","nullable":true,"enum":["QUEUED","SUBMITTED","CONFIRMED","FAILED"],"description":"Transaction status"}},"required":["batchIndex","cancelledAt","chainId","clientId","confirmedAt","confirmedAtBlockNumber","createdAt","errorMessage","from","id","transactionHash","status"]}}},"required":["pagination","transactions"]}},"required":["result"]}}}},"400":{"description":"Invalid request parameters. This occurs when pagination parameters are out of range or wallet address format is invalid."},"401":{"description":"Authentication required. The request must include a valid `x-client-id` header for frontend usage or x-secret-key for backend usage."},"500":{"description":"Internal server error. This may occur due to engine connectivity issues, database unavailability, or unexpected server errors."}}},"post":{"description":"Submits pre-encoded blockchain transactions with custom data payloads. This endpoint is for low-level transaction submission where you have already encoded the transaction data. For smart contract method calls, use /v1/contracts/write. For native token transfers, use /v1/wallets/send.\n\n**Authentication**: This endpoint requires project authentication and wallet authentication. For backend usage, use `x-secret-key` header. For frontend usage, use `x-client-id` + `Authorization: Bearer <jwt>` headers.","examples":[{"description":"Submit a single encoded transaction with custom data (backend usage)","request":{"body":{"chainId":137,"from":"0x1234567890123456789012345678901234567890","transactions":[{"data":"0xa9059cbb000000000000000000000000742d35cc6634c0532925a3b8d43c67b8c8b3e9c6000000000000000000000000000000000000000000000000016345785d8a0000","to":"0xA0b86a33E6411E3036C1C4c7E815D0a82e3F5fD6","value":"0"}]},"headers":{"x-secret-key":"your-secret-key"}},"response":{"result":{"transactionIds":["0x1234567890abcdef..."]}},"summary":"Single Encoded Transaction (Backend)"},{"description":"Batch multiple encoded transactions from same address (frontend usage)","request":{"body":{"chainId":84532,"from":"0x1234567890123456789012345678901234567891","transactions":[{"data":"0x095ea7b3000000000000000000000000742d35cc6634c0532925a3b8d43c67b8c8b3e9c60000000000000000000000000000000000000000000000000de0b6b3a7640000","to":"0xe352Cf5f74e3ACfd2d59EcCee6373d2Aa996086e","value":"0"},{"data":"0x","to":"0x1234567890123456789012345678901234567890","value":"50000000000000000"}]},"headers":{"Authorization":"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...","x-client-id":"your-client-id"}},"response":{"result":{"transactionIds":["0xabcdef1234567890...","0x1234567890abcdef..."]}},"summary":"Batch Encoded Transactions (Frontend)"}],"operationId":"sendTransactions","summary":"Send Transactions","tags":["Transactions"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"chainId":{"type":"integer","minimum":0,"exclusiveMinimum":true,"description":"The blockchain network identifier where all transactions will be executed."},"from":{"type":"string","description":"The wallet address or ENS name that will send the transaction."},"transactions":{"type":"array","items":{"type":"object","properties":{"data":{"type":"string","description":"Transaction data in hexadecimal format for contract interactions or custom payloads."},"to":{"type":"string","description":"The target address or ENS name for the transaction."},"value":{"type":"string","description":"Amount of native token to send in wei (smallest unit). Use '0' or omit for non-value transactions."}},"required":["data","to"],"description":"A blockchain transaction with pre-encoded data payload. For contract calls, use /v1/contracts/write. For native token transfers, use /v1/wallets/send.","title":"Transaction"},"minItems":1,"description":"Array of encoded blockchain transactions to execute. All transactions will use the same from address and chainId."}},"required":["chainId","from","transactions"],"description":"Request object containing an array of encoded blockchain transactions to execute. All transactions must use the same from address and chainId. For contract calls, use /v1/contracts/write. For native token transfers, use /v1/wallets/send.","examples":[{"chainId":137,"from":"0x1234567890123456789012345678901234567890","transactions":[{"data":"0xa9059cbb000000000000000000000000742d35cc6634c0532925a3b8d43c67b8c8b3e9c6000000000000000000000000000000000000000000000000016345785d8a0000","to":"0xA0b86a33E6411E3036C1C4c7E815D0a82e3F5fD6","value":"0"}]},{"chainId":84532,"from":"0x1234567890123456789012345678901234567890","transactions":[{"data":"0x095ea7b3000000000000000000000000742d35cc6634c0532925a3b8d43c67b8c8b3e9c60000000000000000000000000000000000000000000000000de0b6b3a7640000","to":"0xe352Cf5f74e3ACfd2d59EcCee6373d2Aa996086e","value":"0"},{"data":"0x","to":"0x1234567890123456789012345678901234567890","value":"50000000000000000"}]}],"title":"Transaction Request"}}}},"responses":{"200":{"description":"Encoded transactions submitted successfully. Returns the transaction IDs for tracking and monitoring.","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"object","properties":{"transactionIds":{"type":"array","items":{"type":"string"},"description":"Array of unique identifiers for the submitted transactions. Use these to track transaction status."}},"required":["transactionIds"]}},"required":["result"]}}}},"400":{"description":"Invalid request parameters. This occurs when transaction data is malformed, insufficient balance, or invalid encoded data."},"401":{"description":"Authentication required. For backend usage, include `x-secret-key` header. For frontend usage, include `x-client-id` + `Authorization: Bearer <jwt>` headers."},"500":{"description":"Internal server error. This may occur due to blockchain connectivity issues, gas estimation failures, or unexpected server errors."}}}},"/v1/payments/swap":{"post":{"description":"Swap one token for another using the optimal route available. You can specify a tokenIn amount (if exact='input') or tokenOut amount (if exact='output'), but not both. The corresponding output or input amount will be returned as the quote.\n\n**Authentication**: This endpoint requires project authentication and wallet authentication. For backend usage, use `x-secret-key` header. For frontend usage, use `x-client-id` + `Authorization: Bearer <jwt>` headers.","examples":[{"description":"Swap 100 USDC for at least 500 PEPE","request":{"body":{"exact":"input","tokenIn":{"address":"0xaf88d065e77c8cC2239327C5EDb3A432268e5831","chainId":42161,"amount":"100"},"tokenOut":{"address":"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9","chainId":42161,"minAmount":"80"},"from":"0xEfc38EF8C09535b25e364b6d1a7C406D3972f2A9"},"headers":{"Authorization":"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...","x-client-id":"your-client-id"}},"response":{"result":{"transactionIds":["tx_abc123def456"]}},"summary":"Swap 100 USDC for at least 500 PEPE"}],"operationId":"paymentsSwap","summary":"Swap Tokens","tags":["Payments"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"exact":{"type":"string","enum":["input","output"],"default":"input","description":"Whether to swap the exact input or output amount"},"tokenIn":{"type":"object","properties":{"address":{"type":"string","description":"The input token address to swap (use 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE for native token)"},"chainId":{"type":"integer","minimum":0,"exclusiveMinimum":true,"description":"The blockchain network where the token is located"},"amount":{"type":"string","description":"The amount of the input token to swap in wei."},"maxAmount":{"type":"string","description":"The maximum amount of the input token to swap in wei."}},"required":["address","chainId"]},"tokenOut":{"type":"object","properties":{"address":{"type":"string","description":"The output token address to swap (use 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE for native token)"},"chainId":{"type":"integer","minimum":0,"exclusiveMinimum":true,"description":"The blockchain network where the token is located"},"amount":{"type":"string","description":"The amount of the output token to receive in wei."},"minAmount":{"type":"string","description":"The minimum amount of the output token to receive in wei."}},"required":["address","chainId"]},"from":{"type":"string","description":"The wallet address or ENS name that will execute the swap."}},"required":["tokenIn","tokenOut","from"],"description":"Request to swap tokens using the optimal route available. You can specify a tokenIn amount (if exact='input') or tokenOut amount (if exact='output'), but not both. The corresponding output or input amount will be returned as the quote.","title":"Swap Token Request","examples":[{"exact":"input","tokenIn":{"address":"0xaf88d065e77c8cC2239327C5EDb3A432268e5831","chainId":42161,"amount":"100"},"tokenOut":{"address":"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9","chainId":42161,"minAmount":"80"},"from":"0xEfc38EF8C09535b25e364b6d1a7C406D3972f2A9"}]}}}},"responses":{"200":{"description":"Swap completed successfully. Returns the transaction used for the swap.","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"object","properties":{"transactionIds":{"type":"array","items":{"type":"string"},"description":"Payment transaction IDs that were executed"}},"required":["transactionIds"]}},"required":["result"],"description":"Successful token swap response containing executed transaction IDs","title":"Swap Token Response"}}}},"400":{"description":"Invalid request parameters."},"401":{"description":"Authentication required. For backend usage, include `x-secret-key` header. For frontend usage, include `x-client-id` + `Authorization: Bearer <jwt>` headers."},"402":{"description":"Payment required. Insufficient wallet balance to complete the purchase."},"500":{"description":"Internal server error. This may occur due to network connectivity issues, wallet creation failures, or transaction execution failures."}}}},"/v1/payments":{"post":{"description":"Create a payment to be executed. Users can complete the payment via hosted UI (link is returned), a transaction execution referencing the product ID, or embedded widgets with the product ID. \n\n**Authentication**: This endpoint requires project authentication.","examples":[{"description":"Create a 'Course' product that costs 100 USDC","request":{"body":{"name":"Course","description":"The complete javascript course","imageUrl":"https://example.com/course.png","token":{"address":"0xaf88d065e77c8cC2239327C5EDb3A432268e5831","chainId":42161,"amount":100},"recipient":"0xEfc38EF8C09535b25e364b6d1a7C406D3972f2A9"},"headers":{"x-secret-key":"your-secret-key"}},"response":{"result":{"id":"payment-id","link":"https://thirdweb.com/pay/payment-id"}},"summary":"Create a 'Course' product that costs 100 USDC"}],"operationId":"createPayment","summary":"Create Payment","tags":["Payments"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"The name of the product"},"description":{"type":"string","description":"The description of the product"},"imageUrl":{"type":"string","description":"The URL of the product image"},"token":{"type":"object","properties":{"address":{"type":"string","description":"The token address to purchase (use 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE for native token)"},"chainId":{"type":"integer","minimum":0,"exclusiveMinimum":true,"description":"The blockchain network where the token is located"},"amount":{"type":"string","description":"The amount of the token to purchase in wei."}},"required":["address","chainId","amount"],"description":"The token to purchase"},"recipient":{"type":"string","description":"The wallet address or ENS name that will receive the payment for the product"},"purchaseData":{"nullable":true,"description":"App specific purchase data for this payment"}},"required":["name","description","token","recipient"],"description":"Request to create a product to be purchased. Users can purchase the product via hosted UI (link is returned), a transaction execution referencing the product ID, or embedded widgets with the product ID.","title":"Create Product Request","examples":[{"name":"Course","description":"The complete javascript course","imageUrl":"https://example.com/course.png","token":{"address":"0xaf88d065e77c8cC2239327C5EDb3A432268e5831","chainId":42161,"amount":"100"},"recipient":"0xEfc38EF8C09535b25e364b6d1a7C406D3972f2A9"}]}}}},"responses":{"200":{"description":"Payment created successfully. Returns the ID and link to complete the payment.","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"object","properties":{"id":{"type":"string","description":"The payment ID"},"link":{"type":"string","description":"The link to purchase the product"}},"required":["id","link"]}},"required":["result"],"description":"Successful payment creation response containing the payment ID and link to purchase the product","title":"Create Payment Response"}}}},"400":{"description":"Invalid request parameters."},"401":{"description":"Authentication required. For backend usage, include `x-secret-key` header. For frontend usage, include `x-client-id` + `Authorization: Bearer <jwt>` headers."},"402":{"description":"Payment required. Insufficient wallet balance to complete the purchase."},"500":{"description":"Internal server error. This may occur due to network connectivity issues, wallet creation failures, or transaction execution failures."}}}},"/v1/payments/{id}":{"post":{"description":"Completes a payment using its default token and amount. If the user does not have sufficient funds in the product's default payment token a 402 status will be returned containing a link and raw quote for purchase fulfillment. \n\n**Authentication**: This endpoint requires project authentication.","examples":[{"description":"Complete a payment using the specified payment ID","request":{"body":{"from":"0xEfc38EF8C09535b25e364b6d1a7C406D3972f2A9"},"params":{"id":"payment-id"},"headers":{"x-secret-key":"your-secret-key"}},"response":{"result":{"transactionId":"tx_abc123def456"}},"summary":"Complete a payment using the specified payment ID"}],"operationId":"paymentsPurchase","summary":"Complete Payment","tags":["Payments"],"parameters":[{"schema":{"type":"string"},"required":true,"name":"id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"from":{"type":"string","description":"The wallet address or ENS name that will purchase the product."}},"required":["from"],"description":"Request to purchase a product. The system will automatically use your wallet balance to purchase the specified product.","title":"Purchase Product Request","examples":[{"from":"0xEfc38EF8C09535b25e364b6d1a7C406D3972f2A9"}]}}}},"responses":{"200":{"description":"Product purchased successfully. Returns the transaction used for the purchase.","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"object","properties":{"transactionId":{"type":"string","description":"Transaction ID that was executed for your product purchase"}},"required":["transactionId"]}},"required":["result"]}}}},"400":{"description":"Invalid request parameters."},"401":{"description":"Authentication required. For backend usage, include `x-secret-key` header. For frontend usage, include `x-client-id` + `Authorization: Bearer <jwt>` headers."},"402":{"description":"Payment required. Insufficient wallet balance to complete the purchase."},"500":{"description":"Internal server error. This may occur due to network connectivity issues, wallet creation failures, or transaction execution failures."}}}},"/v1/tokens":{"post":{"description":"Create a new ERC20 token with the provided metadata and starting price. The token is immediately available for purchase using thirdweb Payments.\n\n**Authentication**: This endpoint requires project authentication and wallet authentication. For backend usage, use `x-secret-key` header. For frontend usage, use `x-client-id` + `Authorization: Bearer <jwt>` headers.","examples":[{"description":"Create a new token with the provided metadata.","request":{"body":{"chainId":42161,"name":"MyToken","symbol":"MT","description":"My very own token","imageUrl":"https://picsum.photos/200","from":"0xEfc38EF8C09535b25e364b6d1a7C406D3972f2A9"}},"response":{"result":{"transactionIds":["tx_abc123def456"]}},"summary":"Create a new token"}],"operationId":"createToken","summary":"Create Token","tags":["Tokens"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"chainId":{"type":"integer","minimum":0,"exclusiveMinimum":true,"description":"The blockchain network identifier. Common values include: 1 (Ethereum), 8453 (Base), 137 (Polygon), 56 (BSC), 43114 (Avalanche), 42161 (Arbitrum), 10 (Optimism)."},"name":{"type":"string","minLength":1,"maxLength":100,"description":"Token name"},"symbol":{"type":"string","minLength":1,"maxLength":20,"description":"Token symbol"},"description":{"type":"string","minLength":1,"maxLength":500,"description":"Token description"},"imageUrl":{"type":"string","format":"uri","description":"Token image URL"},"from":{"type":"string","description":"Wallet address or ENS that will deploy the token."}},"required":["chainId","name","symbol","description","imageUrl","from"],"description":"Request schema for creating a new ERC20 token","examples":[{"chainId":42161,"name":"MyToken","symbol":"MT","description":"My very own token","imageUrl":"https://picsum.photos/200","from":"0xEfc38EF8C09535b25e364b6d1a7C406D3972f2A9"}]}}}},"responses":{"200":{"description":"Token deployed successfully. The chain ID and contract address are returned.","content":{"application/json":{"schema":{"type":"object","properties":{"chainId":{"type":"integer","minimum":0,"exclusiveMinimum":true,"description":"The chain the token was deployed on."},"address":{"type":"string","description":"The address the token was deployed at"}},"required":["chainId","address"]}}}},"400":{"description":"Invalid request parameters."},"401":{"description":"Authentication required. For backend usage, include `x-secret-key` header. For frontend usage, include `x-client-id` + `Authorization: Bearer <jwt>` headers."},"402":{"description":"Payment required. Insufficient wallet balance to deploy the contract."},"500":{"description":"Internal server error. This may occur due to network connectivity issues, wallet creation failures, or transaction execution failures."}}},"get":{"description":"Lists or search existing tokens based on the provided filters. Supports querying by chain ID, token address, symbol, and/or name.\n\n\n\n**Authentication**: Pass `x-client-id` header for frontend usage from allowlisted origins or `x-secret-key` for backend usage.","examples":[{"description":"Lists the first 20 known tokens on Arbitrum.","request":{"query":{"limit":20,"page":1,"chainId":42161}},"response":{"result":{"pagination":{"limit":20,"page":1,"totalCount":156},"tokens":[{"chainId":"42161","address":"0xaf88d065e77c8cC2239327C5EDb3A432268e5831","name":"USDC","symbol":"USDC","decimals":6,"iconUri":"https://example.com/icon.png","prices":{"USD":"1","EUR":"0.84"}}]}},"summary":"List tokens"}],"operationId":"listTokens","summary":"List Tokens","tags":["Tokens"],"parameters":[{"schema":{"type":"integer","minimum":1,"maximum":100,"default":20,"description":"Number of tokens to return per page (1-100)."},"required":false,"description":"Number of tokens to return per page (1-100).","name":"limit","in":"query"},{"schema":{"type":"integer","minimum":1,"default":1,"description":"Page number for pagination, starting from 1."},"required":false,"description":"Page number for pagination, starting from 1.","name":"page","in":"query"},{"schema":{"type":"integer","minimum":0,"exclusiveMinimum":true,"description":"Limit tokens to a specific chain."},"required":false,"description":"Limit tokens to a specific chain.","name":"chainId","in":"query"},{"schema":{"type":"string","description":"Get a specific token by contract address"},"required":false,"description":"Get a specific token by contract address","name":"tokenAddress","in":"query"},{"schema":{"type":"string","description":"Limit tokens to a specific symbol."},"required":false,"description":"Limit tokens to a specific symbol.","name":"symbol","in":"query"},{"schema":{"type":"string","description":"Limit tokens to a specific name."},"required":false,"description":"Limit tokens to a specific name.","name":"name","in":"query"}],"responses":{"200":{"description":"Tokens returned successfully.","content":{"application/json":{"schema":{"type":"object","properties":{"pagination":{"type":"object","properties":{"hasMore":{"type":"boolean","description":"Whether there are more items available"},"limit":{"type":"number","nullable":true,"default":20,"description":"Number of items per page"},"page":{"type":"number","nullable":true,"default":1,"description":"Current page number"},"totalCount":{"type":"number","nullable":true,"description":"Total number of items available"}}},"tokens":{"type":"array","items":{"type":"object","properties":{"chainId":{"type":"integer","minimum":0,"exclusiveMinimum":true,"description":"The blockchain network identifier. Common values include: 1 (Ethereum), 8453 (Base), 137 (Polygon), 56 (BSC), 43114 (Avalanche), 42161 (Arbitrum), 10 (Optimism)."},"address":{"type":"string","description":"A valid Ethereum address (0x-prefixed hex string) or ENS name (e.g., vitalik.eth)."},"decimals":{"type":"number"},"symbol":{"type":"string"},"iconUri":{"type":"string"},"prices":{"type":"object","additionalProperties":{"type":"number"},"description":"Token price in different FIAT currencies.","examples":[{"USD":1,"EUR":0.84}]}},"required":["chainId","address","decimals","symbol","prices"]}}},"required":["pagination","tokens"]}}}},"400":{"description":"Invalid request parameters."},"401":{"description":"Authentication required. For backend usage, include `x-secret-key` header. For frontend usage, include `x-client-id` + `Authorization: Bearer <jwt>` headers."},"500":{"description":"Internal server error. This may occur due to network connectivity issues, wallet creation failures, or transaction execution failures."}}}},"/v1/tokens/{chainId}/{address}/owners":{"get":{"description":"Retrieves a paginated list of owners for a given ERC-20 token contract on a specific chain.\n\n**Authentication**: Pass `x-client-id` header for frontend usage from allowlisted origins or `x-secret-key` for backend usage.","examples":[{"description":"Get token owners on Ethereum mainnet","request":{"params":{"chainId":1,"address":"0xA0b86a33E6411E3036C1C4c7E815D0a82e3F5fD6"},"query":{"page":1,"limit":20,"hasMore":false}},"response":{"result":{"owners":[{"address":"0x742d35Cc6634C0532925a3b8D43C67B8c8B3E9C6","amount":"1000000000000000000"}],"pagination":{"limit":20,"page":1,"hasMore":true}}},"summary":"Token owners"}],"operationId":"getTokenOwners","summary":"Get Owners","tags":["Tokens"],"parameters":[{"schema":{"type":"integer","minimum":0,"exclusiveMinimum":true,"description":"The blockchain network identifier. Common values include: 1 (Ethereum), 8453 (Base), 137 (Polygon), 56 (BSC), 43114 (Avalanche), 42161 (Arbitrum), 10 (Optimism)."},"required":true,"description":"The blockchain network identifier. Common values include: 1 (Ethereum), 8453 (Base), 137 (Polygon), 56 (BSC), 43114 (Avalanche), 42161 (Arbitrum), 10 (Optimism).","name":"chainId","in":"path"},{"schema":{"type":"string","description":"A valid Ethereum address (0x-prefixed hex string) or ENS name (e.g., vitalik.eth)."},"required":true,"description":"A valid Ethereum address (0x-prefixed hex string) or ENS name (e.g., vitalik.eth).","name":"address","in":"path"},{"schema":{"type":"integer","minimum":1,"maximum":100,"default":20,"description":"Number of owners to return per page (1-100)."},"required":false,"description":"Number of owners to return per page (1-100).","name":"limit","in":"query"},{"schema":{"type":"integer","minimum":1,"default":1,"description":"Page number for pagination, starting from 1."},"required":false,"description":"Page number for pagination, starting from 1.","name":"page","in":"query"}],"responses":{"200":{"description":"Token owners retrieved successfully. Returns owners with pagination information.","content":{"application/json":{"schema":{"type":"object","properties":{"result":{"type":"object","properties":{"owners":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string","description":"Owner wallet address"},"amount":{"type":"string","description":"Token amount owned as a string"}},"required":["address","amount"]},"description":"Array of token owners with amounts."},"pagination":{"type":"object","properties":{"hasMore":{"type":"boolean","description":"Whether there are more items available"},"limit":{"type":"number","nullable":true,"default":20,"description":"Number of items per page"},"page":{"type":"number","nullable":true,"default":1,"description":"Current page number"},"totalCount":{"type":"number","nullable":true,"description":"Total number of items available"}}}},"required":["owners","pagination"]}},"required":["result"]}}}},"400":{"description":"Invalid request parameters."},"401":{"description":"Authentication required. The request must include a valid `x-client-id` header for frontend usage or x-secret-key for backend usage."},"404":{"description":"Token not found or no owners available."},"500":{"description":"Internal server error."}}}},"/ai/chat":{"post":{"description":"Thirdweb AI chat completion API (BETA).\n\nSend natural language queries to interact with any EVM chain, read data, prepare transactions, swap tokens, deploy contracts, payments and more.\n\n\n\n**Authentication**: Pass `x-client-id` header for frontend usage from allowlisted origins or `x-secret-key` for backend usage.","operationId":"chat","summary":"Chat","tags":["AI"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"messages":{"type":"array","items":{"type":"object","properties":{"role":{"type":"string","enum":["user","assistant","system"]},"content":{"anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"object","properties":{"type":{"type":"string","enum":["image"]},"image_url":{"type":"string","nullable":true},"b64":{"type":"string","nullable":true}},"required":["type"],"description":"Image content","title":"Image"},{"type":"object","properties":{"type":{"type":"string","enum":["text"]},"text":{"type":"string"}},"required":["type","text"],"description":"Text content","title":"Text"},{"type":"object","properties":{"type":{"type":"string","enum":["transaction"]},"chain_id":{"type":"number"},"transaction_hash":{"type":"string","pattern":"^0x[a-fA-F0-9]{64}$"}},"required":["type","chain_id","transaction_hash"],"description":"Transaction content","title":"Transaction"}]}}]}},"required":["role","content"]},"minItems":1,"description":"Natural language query for the AI assistant"},"context":{"type":"object","properties":{"from":{"type":"string","description":"Optional wallet address that will execute transactions"},"chain_ids":{"type":"array","items":{"type":"number"},"description":"Optional chain IDs for context"},"session_id":{"type":"string","nullable":true,"description":"Optional session ID for conversation continuity. If not provided, a new session will be created"}}},"stream":{"type":"boolean","description":"Enable server streaming of the AI response"}},"required":["messages","context"],"description":"Chat request","title":"Chat Request","example":{"messages":[{"role":"user","content":"Send 0.01 ETH to vitalik.eth"}],"context":{"chain_ids":[8453],"from":"0x1234567890123456789012345678901234567890"},"stream":false}}}}},"responses":{"200":{"description":"AI assistant response or SSE stream when stream=true","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"The AI assistant's response"},"actions":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"session_id":{"type":"string"},"request_id":{"type":"string"},"source":{"type":"string","default":"model"},"tool_name":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"kwargs":{"type":"object","nullable":true,"additionalProperties":{"nullable":true}},"type":{"type":"string","enum":["init"]},"data":{"nullable":true}},"required":["session_id","request_id","type","data"],"description":"Initialize the agent","title":"Init"},{"type":"object","properties":{"session_id":{"type":"string"},"request_id":{"type":"string"},"source":{"type":"string","default":"model"},"tool_name":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"kwargs":{"type":"object","nullable":true,"additionalProperties":{"nullable":true}},"type":{"type":"string","enum":["eval"]},"data":{"type":"string"}},"required":["session_id","request_id","type","data"],"description":"Evaluate the agent","title":"Eval"},{"type":"object","properties":{"session_id":{"type":"string"},"request_id":{"type":"string"},"source":{"type":"string","default":"model"},"tool_name":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"kwargs":{"type":"object","nullable":true,"additionalProperties":{"nullable":true}},"type":{"type":"string","enum":["presence"]},"data":{"anyOf":[{"type":"string"},{"type":"object","properties":{}}]}},"required":["session_id","request_id","type","data"],"description":"Check the agent's presence","title":"Presence"},{"type":"object","properties":{"session_id":{"type":"string"},"request_id":{"type":"string"},"source":{"type":"string","default":"model"},"tool_name":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"kwargs":{"type":"object","nullable":true,"additionalProperties":{"nullable":true}},"type":{"type":"string","enum":["context"]},"data":{"anyOf":[{"type":"object","properties":{"session_id":{"type":"string","nullable":true},"wallet_address":{"type":"string","nullable":true},"chain_ids":{"type":"array","nullable":true,"items":{"type":"number"}},"networks":{"type":"string","nullable":true,"enum":["all","mainnet","testnet"]}}},{"type":"string"}]}},"required":["session_id","request_id","type","data"],"description":"Get the agent's context","title":"Context"},{"type":"object","properties":{"session_id":{"type":"string"},"request_id":{"type":"string"},"source":{"type":"string","default":"model"},"tool_name":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"kwargs":{"type":"object","nullable":true,"additionalProperties":{"nullable":true}},"type":{"type":"string","enum":["image"]},"data":{"type":"object","properties":{"url":{"type":"string"},"width":{"type":"number"},"height":{"type":"number"}},"required":["url","width","height"]}},"required":["session_id","request_id","type","data"],"description":"Generate an image","title":"Image"},{"type":"object","properties":{"session_id":{"type":"string"},"request_id":{"type":"string"},"source":{"type":"string","default":"model"},"tool_name":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"kwargs":{"type":"object","nullable":true,"additionalProperties":{"nullable":true}},"type":{"type":"string","enum":["sign_transaction"]},"data":{"anyOf":[{"type":"object","properties":{"chainId":{"type":"number"},"function":{"type":"string","nullable":true},"to":{"type":"string"},"value":{"type":"string"},"data":{"type":"string"}},"required":["chainId","to","value","data"]},{"type":"string"}]}},"required":["session_id","request_id","type","data"],"description":"Sign a transaction","title":"Sign Transaction"},{"type":"object","properties":{"session_id":{"type":"string"},"request_id":{"type":"string"},"source":{"type":"string","default":"model"},"tool_name":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"kwargs":{"type":"object","nullable":true,"additionalProperties":{"nullable":true}},"type":{"type":"string","enum":["sign_swap"]},"data":{"anyOf":[{"type":"object","properties":{"transaction":{"type":"object","properties":{"chainId":{"type":"number"},"function":{"type":"string","nullable":true},"to":{"type":"string"},"value":{"type":"string"},"data":{"type":"string"}},"required":["chainId","to","value","data"]},"action":{"type":"string","nullable":true},"intent":{"type":"object","properties":{"originChainId":{"type":"number"},"originTokenAddress":{"type":"string"},"destinationChainId":{"type":"number"},"destinationTokenAddress":{"type":"string"},"amount":{"type":"string"},"sender":{"type":"string"},"receiver":{"type":"string"},"maxSteps":{"type":"number"}},"required":["originChainId","originTokenAddress","destinationChainId","destinationTokenAddress","amount","sender","receiver","maxSteps"]},"from":{"type":"object","properties":{"address":{"type":"string"},"chain_id":{"type":"number"},"amount":{"type":"string"},"symbol":{"type":"string"},"decimals":{"type":"number"},"price":{"type":"number","nullable":true}},"required":["address","chain_id","amount","symbol","decimals","price"]},"to":{"type":"object","properties":{"address":{"type":"string"},"chain_id":{"type":"number"},"amount":{"type":"string"},"symbol":{"type":"string"},"decimals":{"type":"number"},"price":{"type":"number","nullable":true}},"required":["address","chain_id","amount","symbol","decimals","price"]}},"required":["transaction","action","intent","from","to"]},{"type":"string"}]}},"required":["session_id","request_id","type","data"],"description":"Sign a swap","title":"Sign Swap"}]}},"session_id":{"type":"string"},"request_id":{"type":"string"}},"required":["message","actions","session_id","request_id"],"description":"Chat response","title":"Chat Response","example":{"message":"I've prepared a native ETH transfer as requested. Would you like to proceed with executing this transfer?","session_id":"123","request_id":"456","actions":[{"type":"sign_transaction","data":{"chainId":8453,"to":"0x1234567890123456789012345678901234567890","value":"10000000000000000","data":"0x"},"session_id":"123","request_id":"456","source":"model","tool_name":null,"description":null,"kwargs":null}]}}},"text/event-stream":{"schema":{"oneOf":[{"type":"object","properties":{"event":{"type":"string","enum":["message"]},"data":{"type":"string"}},"required":["event","data"],"description":"Text delta chunk","title":"Message"},{"type":"object","properties":{"event":{"type":"string","enum":["action"]},"data":{"oneOf":[{"type":"object","properties":{"session_id":{"type":"string"},"request_id":{"type":"string"},"source":{"type":"string","default":"model"},"tool_name":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"kwargs":{"type":"object","nullable":true,"additionalProperties":{"nullable":true}},"type":{"type":"string","enum":["init"]},"data":{"nullable":true}},"required":["session_id","request_id","type","data"],"description":"Initialize the agent","title":"Init"},{"type":"object","properties":{"session_id":{"type":"string"},"request_id":{"type":"string"},"source":{"type":"string","default":"model"},"tool_name":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"kwargs":{"type":"object","nullable":true,"additionalProperties":{"nullable":true}},"type":{"type":"string","enum":["eval"]},"data":{"type":"string"}},"required":["session_id","request_id","type","data"],"description":"Evaluate the agent","title":"Eval"},{"type":"object","properties":{"session_id":{"type":"string"},"request_id":{"type":"string"},"source":{"type":"string","default":"model"},"tool_name":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"kwargs":{"type":"object","nullable":true,"additionalProperties":{"nullable":true}},"type":{"type":"string","enum":["presence"]},"data":{"anyOf":[{"type":"string"},{"type":"object","properties":{}}]}},"required":["session_id","request_id","type","data"],"description":"Check the agent's presence","title":"Presence"},{"type":"object","properties":{"session_id":{"type":"string"},"request_id":{"type":"string"},"source":{"type":"string","default":"model"},"tool_name":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"kwargs":{"type":"object","nullable":true,"additionalProperties":{"nullable":true}},"type":{"type":"string","enum":["context"]},"data":{"anyOf":[{"type":"object","properties":{"session_id":{"type":"string","nullable":true},"wallet_address":{"type":"string","nullable":true},"chain_ids":{"type":"array","nullable":true,"items":{"type":"number"}},"networks":{"type":"string","nullable":true,"enum":["all","mainnet","testnet"]}}},{"type":"string"}]}},"required":["session_id","request_id","type","data"],"description":"Get the agent's context","title":"Context"},{"type":"object","properties":{"session_id":{"type":"string"},"request_id":{"type":"string"},"source":{"type":"string","default":"model"},"tool_name":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"kwargs":{"type":"object","nullable":true,"additionalProperties":{"nullable":true}},"type":{"type":"string","enum":["image"]},"data":{"type":"object","properties":{"url":{"type":"string"},"width":{"type":"number"},"height":{"type":"number"}},"required":["url","width","height"]}},"required":["session_id","request_id","type","data"],"description":"Generate an image","title":"Image"},{"type":"object","properties":{"session_id":{"type":"string"},"request_id":{"type":"string"},"source":{"type":"string","default":"model"},"tool_name":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"kwargs":{"type":"object","nullable":true,"additionalProperties":{"nullable":true}},"type":{"type":"string","enum":["sign_transaction"]},"data":{"anyOf":[{"type":"object","properties":{"chainId":{"type":"number"},"function":{"type":"string","nullable":true},"to":{"type":"string"},"value":{"type":"string"},"data":{"type":"string"}},"required":["chainId","to","value","data"]},{"type":"string"}]}},"required":["session_id","request_id","type","data"],"description":"Sign a transaction","title":"Sign Transaction"},{"type":"object","properties":{"session_id":{"type":"string"},"request_id":{"type":"string"},"source":{"type":"string","default":"model"},"tool_name":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"kwargs":{"type":"object","nullable":true,"additionalProperties":{"nullable":true}},"type":{"type":"string","enum":["sign_swap"]},"data":{"anyOf":[{"type":"object","properties":{"transaction":{"type":"object","properties":{"chainId":{"type":"number"},"function":{"type":"string","nullable":true},"to":{"type":"string"},"value":{"type":"string"},"data":{"type":"string"}},"required":["chainId","to","value","data"]},"action":{"type":"string","nullable":true},"intent":{"type":"object","properties":{"originChainId":{"type":"number"},"originTokenAddress":{"type":"string"},"destinationChainId":{"type":"number"},"destinationTokenAddress":{"type":"string"},"amount":{"type":"string"},"sender":{"type":"string"},"receiver":{"type":"string"},"maxSteps":{"type":"number"}},"required":["originChainId","originTokenAddress","destinationChainId","destinationTokenAddress","amount","sender","receiver","maxSteps"]},"from":{"type":"object","properties":{"address":{"type":"string"},"chain_id":{"type":"number"},"amount":{"type":"string"},"symbol":{"type":"string"},"decimals":{"type":"number"},"price":{"type":"number","nullable":true}},"required":["address","chain_id","amount","symbol","decimals","price"]},"to":{"type":"object","properties":{"address":{"type":"string"},"chain_id":{"type":"number"},"amount":{"type":"string"},"symbol":{"type":"string"},"decimals":{"type":"number"},"price":{"type":"number","nullable":true}},"required":["address","chain_id","amount","symbol","decimals","price"]}},"required":["transaction","action","intent","from","to"]},{"type":"string"}]}},"required":["session_id","request_id","type","data"],"description":"Sign a swap","title":"Sign Swap"}]}},"required":["event","data"],"description":"Action to be executed by the user","title":"Action"},{"type":"object","properties":{"event":{"type":"string","enum":["request_id"]},"data":{"type":"string"}},"required":["event","data"],"description":"Request ID","title":"Request ID"},{"type":"object","properties":{"event":{"type":"string","enum":["session_id"]},"data":{"type":"string"}},"required":["event","data"],"description":"Session ID","title":"Session ID"},{"type":"object","properties":{"event":{"type":"string","enum":["context"]},"data":{"type":"object","properties":{"session_id":{"type":"string","nullable":true},"wallet_address":{"type":"string","nullable":true},"chain_ids":{"type":"array","nullable":true,"items":{"type":"number"}},"networks":{"type":"string","nullable":true,"enum":["all","mainnet","testnet"]}}}},"required":["event","data"],"description":"Context","title":"Context"},{"type":"object","properties":{"event":{"type":"string","enum":["done"]},"data":{"type":"boolean"}},"required":["event","data"],"description":"Done","title":"Done"},{"type":"object","properties":{"event":{"type":"string","enum":["error"]},"data":{"type":"string"}},"required":["event","data"],"description":"Error","title":"Error"}]}}}}}}},"/mcp":{"post":{"description":"Model Context Protocol (MCP) server endpoint that exposes all thirdweb API endpoints as MCP tools. This allows LLMs and AI assistants to interact with the thirdweb API through the standardized MCP protocol.\n\nAuthentication via x-secret-key is required for all requests.","operationId":"mcpServer","summary":"MCP Server","tags":["AI"],"requestBody":{"content":{"application/json":{"schema":{"nullable":true}}}},"responses":{"200":{"description":"MCP response","content":{"application/json":{"schema":{"nullable":true}}}}}}},"/llms.txt":{"get":{"tags":["AI"],"description":"The full openAPI reference for the thirdweb API in LLMs.txt format. Useful for AI assistants to understand the API and its capabilities. No authentication is required.","operationId":"llmsTxt","summary":"llms.txt","responses":{"200":{"description":"LLMs.txt","content":{"text/plain":{"schema":{"type":"string"}}}}}}}}}